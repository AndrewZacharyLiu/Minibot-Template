ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"launch_task.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Swerve-Standard/src/launch_task.c"
  20              		.section	.text.Launch_Task_Init,"ax",%progbits
  21              		.align	1
  22              		.global	Launch_Task_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	Launch_Task_Init:
  28              	.LFB142:
   1:Swerve-Standard/src/launch_task.c **** #include "launch_task.h"
   2:Swerve-Standard/src/launch_task.c **** 
   3:Swerve-Standard/src/launch_task.c **** #include "dji_motor.h"
   4:Swerve-Standard/src/launch_task.c **** #include "motor.h"
   5:Swerve-Standard/src/launch_task.c **** #include "robot.h"
   6:Swerve-Standard/src/launch_task.c **** #include "remote.h"
   7:Swerve-Standard/src/launch_task.c **** #include "user_math.h"
   8:Swerve-Standard/src/launch_task.c **** #include "referee_system.h"
   9:Swerve-Standard/src/launch_task.c **** #include "laser.h"
  10:Swerve-Standard/src/launch_task.c **** #include <stdint.h>
  11:Swerve-Standard/src/launch_task.c **** 
  12:Swerve-Standard/src/launch_task.c **** extern Robot_State_t g_robot_state;
  13:Swerve-Standard/src/launch_task.c **** extern Remote_t g_remote;
  14:Swerve-Standard/src/launch_task.c **** 
  15:Swerve-Standard/src/launch_task.c **** DJI_Motor_Handle_t *g_flywheel_left, *g_flywheel_right, *g_feed_motor;
  16:Swerve-Standard/src/launch_task.c **** 
  17:Swerve-Standard/src/launch_task.c **** void Launch_Task_Init()
  18:Swerve-Standard/src/launch_task.c **** {
  29              		.loc 1 18 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 544
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 28
  36              		.cfi_offset 4, -28
  37              		.cfi_offset 5, -24
  38              		.cfi_offset 6, -20
  39              		.cfi_offset 7, -16
  40              		.cfi_offset 8, -12
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 2


  41              		.cfi_offset 9, -8
  42              		.cfi_offset 14, -4
  43 0004 ADF5097D 		sub	sp, sp, #548
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 576
  19:Swerve-Standard/src/launch_task.c ****     // Init Launch Hardware
  20:Swerve-Standard/src/launch_task.c ****     Motor_Config_t flywheel_left_config = {
  46              		.loc 1 20 5 view .LVU1
  47              		.loc 1 20 20 is_stmt 0 view .LVU2
  48 0008 0DF5B679 		add	r9, sp, #364
  49 000c 4FF0B408 		mov	r8, #180
  50 0010 4246     		mov	r2, r8
  51 0012 0021     		movs	r1, #0
  52 0014 4846     		mov	r0, r9
  53 0016 FFF7FEFF 		bl	memset
  54              	.LVL0:
  55 001a 0126     		movs	r6, #1
  56 001c 8DF86C61 		strb	r6, [sp, #364]
  57 0020 0423     		movs	r3, #4
  58 0022 8DF87231 		strb	r3, [sp, #370]
  59 0026 8DF87761 		strb	r6, [sp, #375]
  60 002a 264F     		ldr	r7, .L3
  61 002c 6E97     		str	r7, [sp, #440]	@ float
  62 002e 264C     		ldr	r4, .L3+4
  63 0030 7694     		str	r4, [sp, #472]	@ float
  21:Swerve-Standard/src/launch_task.c ****         .can_bus = 1,
  22:Swerve-Standard/src/launch_task.c ****         .speed_controller_id = 4,
  23:Swerve-Standard/src/launch_task.c ****         .offset = 0,
  24:Swerve-Standard/src/launch_task.c ****         .control_mode = VELOCITY_CONTROL,
  25:Swerve-Standard/src/launch_task.c ****         .motor_reversal = MOTOR_REVERSAL_NORMAL,
  26:Swerve-Standard/src/launch_task.c ****         .velocity_pid =
  27:Swerve-Standard/src/launch_task.c ****             {
  28:Swerve-Standard/src/launch_task.c ****                 .kp = 500.0f,
  29:Swerve-Standard/src/launch_task.c ****                 .output_limit = M3508_MAX_CURRENT_INT,
  30:Swerve-Standard/src/launch_task.c ****             },
  31:Swerve-Standard/src/launch_task.c ****     };
  32:Swerve-Standard/src/launch_task.c **** 
  33:Swerve-Standard/src/launch_task.c ****     Motor_Config_t flywheel_right_config = {
  64              		.loc 1 33 5 is_stmt 1 view .LVU3
  65              		.loc 1 33 20 is_stmt 0 view .LVU4
  66 0032 2EAD     		add	r5, sp, #184
  67 0034 4246     		mov	r2, r8
  68 0036 0021     		movs	r1, #0
  69 0038 2846     		mov	r0, r5
  70 003a FFF7FEFF 		bl	memset
  71              	.LVL1:
  72 003e 8DF8B860 		strb	r6, [sp, #184]
  73 0042 0523     		movs	r3, #5
  74 0044 8DF8BE30 		strb	r3, [sp, #190]
  75 0048 8DF8C260 		strb	r6, [sp, #194]
  76 004c 8DF8C360 		strb	r6, [sp, #195]
  77 0050 4197     		str	r7, [sp, #260]	@ float
  78 0052 4994     		str	r4, [sp, #292]	@ float
  34:Swerve-Standard/src/launch_task.c ****         .can_bus = 1,
  35:Swerve-Standard/src/launch_task.c ****         .speed_controller_id = 5,
  36:Swerve-Standard/src/launch_task.c ****         .offset = 0,
  37:Swerve-Standard/src/launch_task.c ****         .control_mode = VELOCITY_CONTROL,
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 3


  38:Swerve-Standard/src/launch_task.c ****         .motor_reversal = MOTOR_REVERSAL_REVERSED,
  39:Swerve-Standard/src/launch_task.c ****         .velocity_pid =
  40:Swerve-Standard/src/launch_task.c ****             {
  41:Swerve-Standard/src/launch_task.c ****                 .kp = 500.0f,
  42:Swerve-Standard/src/launch_task.c ****                 .output_limit = M3508_MAX_CURRENT_INT,
  43:Swerve-Standard/src/launch_task.c ****             },
  44:Swerve-Standard/src/launch_task.c ****     };
  45:Swerve-Standard/src/launch_task.c **** 
  46:Swerve-Standard/src/launch_task.c ****     Motor_Config_t feed_speed_config = {
  79              		.loc 1 46 5 is_stmt 1 view .LVU5
  80              		.loc 1 46 20 is_stmt 0 view .LVU6
  81 0054 01AC     		add	r4, sp, #4
  82 0056 4246     		mov	r2, r8
  83 0058 0021     		movs	r1, #0
  84 005a 2046     		mov	r0, r4
  85 005c FFF7FEFF 		bl	memset
  86              	.LVL2:
  87 0060 8DF80460 		strb	r6, [sp, #4]
  88 0064 4FF00208 		mov	r8, #2
  89 0068 8DF80A80 		strb	r8, [sp, #10]
  90 006c 1323     		movs	r3, #19
  91 006e 8DF80F30 		strb	r3, [sp, #15]
  92 0072 164B     		ldr	r3, .L3+8
  93 0074 0793     		str	r3, [sp, #28]	@ float
  94 0076 164B     		ldr	r3, .L3+12
  95 0078 0893     		str	r3, [sp, #32]	@ float
  96 007a 164B     		ldr	r3, .L3+16
  97 007c 0993     		str	r3, [sp, #36]	@ float
  98 007e 164B     		ldr	r3, .L3+20
  99 0080 0B93     		str	r3, [sp, #44]	@ float
 100 0082 164B     		ldr	r3, .L3+24
 101 0084 0F93     		str	r3, [sp, #60]	@ float
 102 0086 1497     		str	r7, [sp, #80]	@ float
 103 0088 154A     		ldr	r2, .L3+28
 104 008a 1692     		str	r2, [sp, #88]	@ float
 105 008c 154A     		ldr	r2, .L3+32
 106 008e 1792     		str	r2, [sp, #92]	@ float
 107 0090 1C93     		str	r3, [sp, #112]	@ float
  47:Swerve-Standard/src/launch_task.c ****         .can_bus = 1,
  48:Swerve-Standard/src/launch_task.c ****         .speed_controller_id = 2,
  49:Swerve-Standard/src/launch_task.c ****         .offset = 0,
  50:Swerve-Standard/src/launch_task.c ****         .control_mode = VELOCITY_CONTROL | POSITION_CONTROL_TOTAL_ANGLE,
  51:Swerve-Standard/src/launch_task.c ****         .motor_reversal = MOTOR_REVERSAL_NORMAL,
  52:Swerve-Standard/src/launch_task.c ****         .velocity_pid =
  53:Swerve-Standard/src/launch_task.c ****             {
  54:Swerve-Standard/src/launch_task.c ****                 .kp = 500.0f,
  55:Swerve-Standard/src/launch_task.c ****                 .kd = 200.0f,
  56:Swerve-Standard/src/launch_task.c ****                 .kf = 100.0f,
  57:Swerve-Standard/src/launch_task.c ****                 .output_limit = M2006_MAX_CURRENT_INT,
  58:Swerve-Standard/src/launch_task.c ****             },
  59:Swerve-Standard/src/launch_task.c ****         .angle_pid =
  60:Swerve-Standard/src/launch_task.c ****             {
  61:Swerve-Standard/src/launch_task.c ****                 .kp = 500000.0f,
  62:Swerve-Standard/src/launch_task.c ****                 .kd = 15000000.0f,
  63:Swerve-Standard/src/launch_task.c ****                 .ki = 0.1f,
  64:Swerve-Standard/src/launch_task.c ****                 .output_limit = M2006_MAX_CURRENT_INT,
  65:Swerve-Standard/src/launch_task.c ****                 .integral_limit = 1000.0f,
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 4


  66:Swerve-Standard/src/launch_task.c ****             }
  67:Swerve-Standard/src/launch_task.c ****     };
  68:Swerve-Standard/src/launch_task.c **** 
  69:Swerve-Standard/src/launch_task.c ****     g_flywheel_left = DJI_Motor_Init(&flywheel_left_config,M3508);
 108              		.loc 1 69 5 is_stmt 1 view .LVU7
 109              		.loc 1 69 23 is_stmt 0 view .LVU8
 110 0092 3146     		mov	r1, r6
 111 0094 4846     		mov	r0, r9
 112 0096 FFF7FEFF 		bl	DJI_Motor_Init
 113              	.LVL3:
 114              		.loc 1 69 21 discriminator 1 view .LVU9
 115 009a 134B     		ldr	r3, .L3+36
 116 009c 1860     		str	r0, [r3]
  70:Swerve-Standard/src/launch_task.c ****     g_flywheel_right = DJI_Motor_Init(&flywheel_right_config,M3508);
 117              		.loc 1 70 5 is_stmt 1 view .LVU10
 118              		.loc 1 70 24 is_stmt 0 view .LVU11
 119 009e 3146     		mov	r1, r6
 120 00a0 2846     		mov	r0, r5
 121 00a2 FFF7FEFF 		bl	DJI_Motor_Init
 122              	.LVL4:
 123              		.loc 1 70 22 discriminator 1 view .LVU12
 124 00a6 114B     		ldr	r3, .L3+40
 125 00a8 1860     		str	r0, [r3]
  71:Swerve-Standard/src/launch_task.c ****     g_feed_motor = DJI_Motor_Init(&feed_speed_config,M2006);
 126              		.loc 1 71 5 is_stmt 1 view .LVU13
 127              		.loc 1 71 20 is_stmt 0 view .LVU14
 128 00aa 4146     		mov	r1, r8
 129 00ac 2046     		mov	r0, r4
 130 00ae FFF7FEFF 		bl	DJI_Motor_Init
 131              	.LVL5:
 132              		.loc 1 71 18 discriminator 1 view .LVU15
 133 00b2 0F4B     		ldr	r3, .L3+44
 134 00b4 1860     		str	r0, [r3]
  72:Swerve-Standard/src/launch_task.c **** 
  73:Swerve-Standard/src/launch_task.c ****     Laser_Init();
 135              		.loc 1 73 5 is_stmt 1 view .LVU16
 136 00b6 FFF7FEFF 		bl	Laser_Init
 137              	.LVL6:
  74:Swerve-Standard/src/launch_task.c **** }
 138              		.loc 1 74 1 is_stmt 0 view .LVU17
 139 00ba 0DF5097D 		add	sp, sp, #548
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 28
 142              		@ sp needed
 143 00be BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 144              	.L4:
 145 00c2 00BF     		.align	2
 146              	.L3:
 147 00c4 0000FA43 		.word	1140457472
 148 00c8 00007A46 		.word	1182400512
 149 00cc 0024F448 		.word	1223959552
 150 00d0 CDCCCC3D 		.word	1036831949
 151 00d4 C0E1644B 		.word	1264902592
 152 00d8 00007A44 		.word	1148846080
 153 00dc 00A00C46 		.word	1175232512
 154 00e0 00004843 		.word	1128792064
 155 00e4 0000C842 		.word	1120403456
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 5


 156 00e8 00000000 		.word	g_flywheel_left
 157 00ec 00000000 		.word	g_flywheel_right
 158 00f0 00000000 		.word	g_feed_motor
 159              		.cfi_endproc
 160              	.LFE142:
 162              		.section	.text.resetRelPos,"ax",%progbits
 163              		.align	1
 164              		.global	resetRelPos
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	resetRelPos:
 170              	.LFB144:
  75:Swerve-Standard/src/launch_task.c **** 
  76:Swerve-Standard/src/launch_task.c **** void Launch_Ctrl_Loop()
  77:Swerve-Standard/src/launch_task.c **** {
  78:Swerve-Standard/src/launch_task.c ****     if (!g_robot_state.launch.IS_FIRING_ENABLED)
  79:Swerve-Standard/src/launch_task.c ****     {
  80:Swerve-Standard/src/launch_task.c ****         stopFlywheel();
  81:Swerve-Standard/src/launch_task.c ****         Laser_Off();
  82:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.IS_FLYWHEEL_ENABLED = 0;
  83:Swerve-Standard/src/launch_task.c ****         return;
  84:Swerve-Standard/src/launch_task.c ****     } else {
  85:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.IS_FLYWHEEL_ENABLED = 1;
  86:Swerve-Standard/src/launch_task.c ****         startFlywheel();
  87:Swerve-Standard/src/launch_task.c ****         Laser_On();
  88:Swerve-Standard/src/launch_task.c ****     }
  89:Swerve-Standard/src/launch_task.c **** 
  90:Swerve-Standard/src/launch_task.c ****     if (g_robot_state.launch.IS_BUSY) { // check if we are in middle of a fire mode
  91:Swerve-Standard/src/launch_task.c ****         switch (g_robot_state.launch.busy_mode)
  92:Swerve-Standard/src/launch_task.c ****         {
  93:Swerve-Standard/src/launch_task.c ****         case REJIGGLE:
  94:Swerve-Standard/src/launch_task.c ****             rejiggle();
  95:Swerve-Standard/src/launch_task.c ****             break;
  96:Swerve-Standard/src/launch_task.c ****         case SINGLE_FIRE:
  97:Swerve-Standard/src/launch_task.c ****             handleSingleFire();
  98:Swerve-Standard/src/launch_task.c ****             break;
  99:Swerve-Standard/src/launch_task.c ****         case BURST_FIRE:
 100:Swerve-Standard/src/launch_task.c ****             break;
 101:Swerve-Standard/src/launch_task.c ****         case FULL_AUTO:
 102:Swerve-Standard/src/launch_task.c ****             handleFullAuto();
 103:Swerve-Standard/src/launch_task.c ****             break;
 104:Swerve-Standard/src/launch_task.c ****         default:
 105:Swerve-Standard/src/launch_task.c ****             break;
 106:Swerve-Standard/src/launch_task.c ****         }
 107:Swerve-Standard/src/launch_task.c ****     } else {
 108:Swerve-Standard/src/launch_task.c ****         // Control loop for launch to see if new mode is set
 109:Swerve-Standard/src/launch_task.c ****         switch (g_robot_state.launch.fire_mode)
 110:Swerve-Standard/src/launch_task.c ****         {
 111:Swerve-Standard/src/launch_task.c ****         case SINGLE_FIRE:
 112:Swerve-Standard/src/launch_task.c ****             handleSingleFire();
 113:Swerve-Standard/src/launch_task.c ****             break;
 114:Swerve-Standard/src/launch_task.c ****         case BURST_FIRE:
 115:Swerve-Standard/src/launch_task.c ****             // TODO: Complete 5 burst
 116:Swerve-Standard/src/launch_task.c ****             break;
 117:Swerve-Standard/src/launch_task.c ****         case FULL_AUTO:
 118:Swerve-Standard/src/launch_task.c ****             handleFullAuto();
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 6


 119:Swerve-Standard/src/launch_task.c ****             break;
 120:Swerve-Standard/src/launch_task.c ****         default:
 121:Swerve-Standard/src/launch_task.c ****             break;
 122:Swerve-Standard/src/launch_task.c **** 
 123:Swerve-Standard/src/launch_task.c ****         }
 124:Swerve-Standard/src/launch_task.c ****     }
 125:Swerve-Standard/src/launch_task.c **** }
 126:Swerve-Standard/src/launch_task.c **** 
 127:Swerve-Standard/src/launch_task.c **** void resetRelPos() {
 171              		.loc 1 127 20 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 10B5     		push	{r4, lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 4, -8
 179              		.cfi_offset 14, -4
 128:Swerve-Standard/src/launch_task.c ****     g_robot_state.launch.shooter_state.accum_angle = 0;
 180              		.loc 1 128 5 view .LVU19
 181              		.loc 1 128 52 is_stmt 0 view .LVU20
 182 0002 064C     		ldr	r4, .L7
 183 0004 0023     		movs	r3, #0
 184 0006 E363     		str	r3, [r4, #60]	@ float
 129:Swerve-Standard/src/launch_task.c ****     g_robot_state.launch.shooter_state.prev_time = xTaskGetTickCount();
 185              		.loc 1 129 5 is_stmt 1 view .LVU21
 186              		.loc 1 129 52 is_stmt 0 view .LVU22
 187 0008 FFF7FEFF 		bl	xTaskGetTickCount
 188              	.LVL7:
 189 000c 07EE900A 		vmov	s15, r0	@ int
 190              		.loc 1 129 50 discriminator 1 view .LVU23
 191 0010 F8EE677A 		vcvt.f32.u32	s15, s15
 192 0014 C4ED0D7A 		vstr.32	s15, [r4, #52]
 130:Swerve-Standard/src/launch_task.c **** }
 193              		.loc 1 130 1 view .LVU24
 194 0018 10BD     		pop	{r4, pc}
 195              	.L8:
 196 001a 00BF     		.align	2
 197              	.L7:
 198 001c 00000000 		.word	g_robot_state
 199              		.cfi_endproc
 200              	.LFE144:
 202              		.section	.text.rejiggle,"ax",%progbits
 203              		.align	1
 204              		.global	rejiggle
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 209              	rejiggle:
 210              	.LFB146:
 131:Swerve-Standard/src/launch_task.c **** 
 132:Swerve-Standard/src/launch_task.c **** #define ticksToDegrees(ticks) ((ticks) * 360.0f / DJI_MAX_TICKS)
 133:Swerve-Standard/src/launch_task.c **** #define ticksToRad(ticks) ((ticks) * 360.0f / DJI_MAX_TICKS)
 134:Swerve-Standard/src/launch_task.c **** #define degreesToTicks(degrees) ((degrees) * DJI_MAX_TICKS / 360.0f)
 135:Swerve-Standard/src/launch_task.c **** float g_curr_angle = 0;
 136:Swerve-Standard/src/launch_task.c **** // TODO check if at ref
 137:Swerve-Standard/src/launch_task.c **** void handleSingleFire() {
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 7


 138:Swerve-Standard/src/launch_task.c ****     if (g_robot_state.launch.IS_BUSY) {
 139:Swerve-Standard/src/launch_task.c ****         if (DJI_Motor_Is_At_Angle(g_feed_motor, FEED_TOLERANCE)) // if shots fired :O then rejiggle
 140:Swerve-Standard/src/launch_task.c ****         {
 141:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.IS_BUSY = 0;
 142:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.busy_mode = IDLE;
 143:Swerve-Standard/src/launch_task.c ****             rejiggle();
 144:Swerve-Standard/src/launch_task.c ****         }
 145:Swerve-Standard/src/launch_task.c ****     }
 146:Swerve-Standard/src/launch_task.c ****     else {
 147:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.IS_BUSY = 1;
 148:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.busy_mode = SINGLE_FIRE;
 149:Swerve-Standard/src/launch_task.c ****         // set a new position reference x degrees forward
 150:Swerve-Standard/src/launch_task.c ****         resetRelPos();
 151:Swerve-Standard/src/launch_task.c **** 
 152:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Control_Mode(g_feed_motor, POSITION_CONTROL_TOTAL_ANGLE);
 153:Swerve-Standard/src/launch_task.c ****         g_curr_angle = DJI_Motor_Get_Total_Angle(g_feed_motor); // rad
 154:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Angle(g_feed_motor, g_curr_angle + SHOT_ANGLE_OFFSET_RAD);
 155:Swerve-Standard/src/launch_task.c ****         // DJI_Motor_Set_Velocity(g_feed_motor, FEED_RATE);
 156:Swerve-Standard/src/launch_task.c ****     }
 157:Swerve-Standard/src/launch_task.c **** }
 158:Swerve-Standard/src/launch_task.c **** 
 159:Swerve-Standard/src/launch_task.c **** void rejiggle() {
 211              		.loc 1 159 17 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 10B5     		push	{r4, lr}
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
 220 0002 2DED028B 		vpush.64	{d8}
 221              	.LCFI5:
 222              		.cfi_def_cfa_offset 16
 223              		.cfi_offset 80, -16
 224              		.cfi_offset 81, -12
 160:Swerve-Standard/src/launch_task.c ****     //set a position reference slightly back to prevent jams
 161:Swerve-Standard/src/launch_task.c ****     float curr_angle_rad = DJI_Motor_Get_Total_Angle(g_feed_motor); // rad
 225              		.loc 1 161 5 view .LVU26
 226              		.loc 1 161 28 is_stmt 0 view .LVU27
 227 0006 1D4B     		ldr	r3, .L13
 228 0008 1868     		ldr	r0, [r3]
 229 000a FFF7FEFF 		bl	DJI_Motor_Get_Total_Angle
 230              	.LVL8:
 231 000e B0EE408A 		vmov.f32	s16, s0
 232              	.LVL9:
 162:Swerve-Standard/src/launch_task.c **** 
 163:Swerve-Standard/src/launch_task.c ****     if (g_robot_state.launch.IS_BUSY) { // if busy, means we already called so go back
 233              		.loc 1 163 5 is_stmt 1 view .LVU28
 234              		.loc 1 163 29 is_stmt 0 view .LVU29
 235 0012 1B4B     		ldr	r3, .L13+4
 236 0014 93F82F30 		ldrb	r3, [r3, #47]	@ zero_extendqisi2
 237              		.loc 1 163 8 view .LVU30
 238 0018 D3B1     		cbz	r3, .L10
 164:Swerve-Standard/src/launch_task.c ****         if (DJI_Motor_Is_At_Angle(g_feed_motor, FEED_TOLERANCE))
 239              		.loc 1 164 9 is_stmt 1 view .LVU31
 240              		.loc 1 164 13 is_stmt 0 view .LVU32
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 8


 241 001a 9FED1A0A 		vldr.32	s0, .L13+8
 242              	.LVL10:
 243              		.loc 1 164 13 view .LVU33
 244 001e 174B     		ldr	r3, .L13
 245 0020 1868     		ldr	r0, [r3]
 246 0022 FFF7FEFF 		bl	DJI_Motor_Is_At_Angle
 247              	.LVL11:
 248              		.loc 1 164 12 discriminator 1 view .LVU34
 249 0026 30B3     		cbz	r0, .L9
 165:Swerve-Standard/src/launch_task.c ****         {
 166:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.busy_mode = IDLE;
 250              		.loc 1 166 13 is_stmt 1 view .LVU35
 251              		.loc 1 166 44 is_stmt 0 view .LVU36
 252 0028 154B     		ldr	r3, .L13+4
 253 002a 0522     		movs	r2, #5
 254 002c 83F83120 		strb	r2, [r3, #49]
 167:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.IS_BUSY = 0;
 255              		.loc 1 167 13 is_stmt 1 view .LVU37
 256              		.loc 1 167 42 is_stmt 0 view .LVU38
 257 0030 0022     		movs	r2, #0
 258 0032 83F82F20 		strb	r2, [r3, #47]
 168:Swerve-Standard/src/launch_task.c ****             DJI_Motor_Set_Control_Mode(g_feed_motor, POSITION_CONTROL_TOTAL_ANGLE);
 259              		.loc 1 168 13 is_stmt 1 view .LVU39
 260 0036 114C     		ldr	r4, .L13
 261 0038 1221     		movs	r1, #18
 262 003a 2068     		ldr	r0, [r4]
 263 003c FFF7FEFF 		bl	DJI_Motor_Set_Control_Mode
 264              	.LVL12:
 169:Swerve-Standard/src/launch_task.c ****             DJI_Motor_Set_Angle(g_feed_motor, curr_angle_rad + (SHOT_ANGLE_OFFSET_RAD / 2));
 265              		.loc 1 169 13 view .LVU40
 266 0040 9FED110A 		vldr.32	s0, .L13+12
 267 0044 38EE000A 		vadd.f32	s0, s16, s0
 268 0048 2068     		ldr	r0, [r4]
 269 004a FFF7FEFF 		bl	DJI_Motor_Set_Angle
 270              	.LVL13:
 271 004e 12E0     		b	.L9
 272              	.LVL14:
 273              	.L10:
 170:Swerve-Standard/src/launch_task.c ****         }
 171:Swerve-Standard/src/launch_task.c ****     }
 172:Swerve-Standard/src/launch_task.c ****     else {
 173:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.busy_mode = REJIGGLE;
 274              		.loc 1 173 9 view .LVU41
 275              		.loc 1 173 40 is_stmt 0 view .LVU42
 276 0050 0B4B     		ldr	r3, .L13+4
 277 0052 0422     		movs	r2, #4
 278 0054 83F83120 		strb	r2, [r3, #49]
 174:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.IS_BUSY = 1;
 279              		.loc 1 174 9 is_stmt 1 view .LVU43
 280              		.loc 1 174 38 is_stmt 0 view .LVU44
 281 0058 0122     		movs	r2, #1
 282 005a 83F82F20 		strb	r2, [r3, #47]
 175:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Control_Mode(g_feed_motor, POSITION_CONTROL_TOTAL_ANGLE);
 283              		.loc 1 175 9 is_stmt 1 view .LVU45
 284 005e 074C     		ldr	r4, .L13
 285 0060 1221     		movs	r1, #18
 286 0062 2068     		ldr	r0, [r4]
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 9


 287 0064 FFF7FEFF 		bl	DJI_Motor_Set_Control_Mode
 288              	.LVL15:
 176:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Angle(g_feed_motor, curr_angle_rad - (SHOT_ANGLE_OFFSET_RAD / 2));
 289              		.loc 1 176 9 view .LVU46
 290 0068 9FED070A 		vldr.32	s0, .L13+12
 291 006c 38EE400A 		vsub.f32	s0, s16, s0
 292 0070 2068     		ldr	r0, [r4]
 293 0072 FFF7FEFF 		bl	DJI_Motor_Set_Angle
 294              	.LVL16:
 295              	.L9:
 177:Swerve-Standard/src/launch_task.c ****     }
 178:Swerve-Standard/src/launch_task.c **** }
 296              		.loc 1 178 1 is_stmt 0 view .LVU47
 297 0076 BDEC028B 		vldm	sp!, {d8}
 298              	.LCFI6:
 299              		.cfi_restore 80
 300              		.cfi_restore 81
 301              		.cfi_def_cfa_offset 8
 302              	.LVL17:
 303              		.loc 1 178 1 view .LVU48
 304 007a 10BD     		pop	{r4, pc}
 305              	.L14:
 306              		.align	2
 307              	.L13:
 308 007c 00000000 		.word	g_feed_motor
 309 0080 00000000 		.word	g_robot_state
 310 0084 C1B8B23D 		.word	1035122881
 311 0088 910A063F 		.word	1057360529
 312              		.cfi_endproc
 313              	.LFE146:
 315              		.section	.text.handleSingleFire,"ax",%progbits
 316              		.align	1
 317              		.global	handleSingleFire
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	handleSingleFire:
 323              	.LFB145:
 137:Swerve-Standard/src/launch_task.c ****     if (g_robot_state.launch.IS_BUSY) {
 324              		.loc 1 137 25 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 10B5     		push	{r4, lr}
 329              	.LCFI7:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 4, -8
 332              		.cfi_offset 14, -4
 138:Swerve-Standard/src/launch_task.c ****         if (DJI_Motor_Is_At_Angle(g_feed_motor, FEED_TOLERANCE)) // if shots fired :O then rejiggle
 333              		.loc 1 138 5 view .LVU50
 138:Swerve-Standard/src/launch_task.c ****         if (DJI_Motor_Is_At_Angle(g_feed_motor, FEED_TOLERANCE)) // if shots fired :O then rejiggle
 334              		.loc 1 138 29 is_stmt 0 view .LVU51
 335 0002 184B     		ldr	r3, .L19
 336 0004 93F82F30 		ldrb	r3, [r3, #47]	@ zero_extendqisi2
 138:Swerve-Standard/src/launch_task.c ****         if (DJI_Motor_Is_At_Angle(g_feed_motor, FEED_TOLERANCE)) // if shots fired :O then rejiggle
 337              		.loc 1 138 8 view .LVU52
 338 0008 83B1     		cbz	r3, .L16
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 10


 139:Swerve-Standard/src/launch_task.c ****         {
 339              		.loc 1 139 9 is_stmt 1 view .LVU53
 139:Swerve-Standard/src/launch_task.c ****         {
 340              		.loc 1 139 13 is_stmt 0 view .LVU54
 341 000a 9FED170A 		vldr.32	s0, .L19+4
 342 000e 174B     		ldr	r3, .L19+8
 343 0010 1868     		ldr	r0, [r3]
 344 0012 FFF7FEFF 		bl	DJI_Motor_Is_At_Angle
 345              	.LVL18:
 139:Swerve-Standard/src/launch_task.c ****         {
 346              		.loc 1 139 12 discriminator 1 view .LVU55
 347 0016 18B3     		cbz	r0, .L15
 141:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.busy_mode = IDLE;
 348              		.loc 1 141 13 is_stmt 1 view .LVU56
 141:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.busy_mode = IDLE;
 349              		.loc 1 141 42 is_stmt 0 view .LVU57
 350 0018 124B     		ldr	r3, .L19
 351 001a 0022     		movs	r2, #0
 352 001c 83F82F20 		strb	r2, [r3, #47]
 142:Swerve-Standard/src/launch_task.c ****             rejiggle();
 353              		.loc 1 142 13 is_stmt 1 view .LVU58
 142:Swerve-Standard/src/launch_task.c ****             rejiggle();
 354              		.loc 1 142 44 is_stmt 0 view .LVU59
 355 0020 0522     		movs	r2, #5
 356 0022 83F83120 		strb	r2, [r3, #49]
 143:Swerve-Standard/src/launch_task.c ****         }
 357              		.loc 1 143 13 is_stmt 1 view .LVU60
 358 0026 FFF7FEFF 		bl	rejiggle
 359              	.LVL19:
 360 002a 19E0     		b	.L15
 361              	.L16:
 147:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.busy_mode = SINGLE_FIRE;
 362              		.loc 1 147 9 view .LVU61
 147:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.busy_mode = SINGLE_FIRE;
 363              		.loc 1 147 38 is_stmt 0 view .LVU62
 364 002c 0D4B     		ldr	r3, .L19
 365 002e 0122     		movs	r2, #1
 366 0030 83F82F20 		strb	r2, [r3, #47]
 148:Swerve-Standard/src/launch_task.c ****         // set a new position reference x degrees forward
 367              		.loc 1 148 9 is_stmt 1 view .LVU63
 148:Swerve-Standard/src/launch_task.c ****         // set a new position reference x degrees forward
 368              		.loc 1 148 40 is_stmt 0 view .LVU64
 369 0034 83F83120 		strb	r2, [r3, #49]
 150:Swerve-Standard/src/launch_task.c **** 
 370              		.loc 1 150 9 is_stmt 1 view .LVU65
 371 0038 FFF7FEFF 		bl	resetRelPos
 372              	.LVL20:
 152:Swerve-Standard/src/launch_task.c ****         g_curr_angle = DJI_Motor_Get_Total_Angle(g_feed_motor); // rad
 373              		.loc 1 152 9 view .LVU66
 374 003c 0B4C     		ldr	r4, .L19+8
 375 003e 1221     		movs	r1, #18
 376 0040 2068     		ldr	r0, [r4]
 377 0042 FFF7FEFF 		bl	DJI_Motor_Set_Control_Mode
 378              	.LVL21:
 153:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Angle(g_feed_motor, g_curr_angle + SHOT_ANGLE_OFFSET_RAD);
 379              		.loc 1 153 9 view .LVU67
 153:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Angle(g_feed_motor, g_curr_angle + SHOT_ANGLE_OFFSET_RAD);
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 11


 380              		.loc 1 153 24 is_stmt 0 view .LVU68
 381 0046 2068     		ldr	r0, [r4]
 382 0048 FFF7FEFF 		bl	DJI_Motor_Get_Total_Angle
 383              	.LVL22:
 153:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Angle(g_feed_motor, g_curr_angle + SHOT_ANGLE_OFFSET_RAD);
 384              		.loc 1 153 22 discriminator 1 view .LVU69
 385 004c 084B     		ldr	r3, .L19+12
 386 004e 83ED000A 		vstr.32	s0, [r3]
 154:Swerve-Standard/src/launch_task.c ****         // DJI_Motor_Set_Velocity(g_feed_motor, FEED_RATE);
 387              		.loc 1 154 9 is_stmt 1 view .LVU70
 388 0052 DFED087A 		vldr.32	s15, .L19+16
 389 0056 30EE270A 		vadd.f32	s0, s0, s15
 390 005a 2068     		ldr	r0, [r4]
 391 005c FFF7FEFF 		bl	DJI_Motor_Set_Angle
 392              	.LVL23:
 393              	.L15:
 157:Swerve-Standard/src/launch_task.c **** 
 394              		.loc 1 157 1 is_stmt 0 view .LVU71
 395 0060 10BD     		pop	{r4, pc}
 396              	.L20:
 397 0062 00BF     		.align	2
 398              	.L19:
 399 0064 00000000 		.word	g_robot_state
 400 0068 C1B8B23D 		.word	1035122881
 401 006c 00000000 		.word	g_feed_motor
 402 0070 00000000 		.word	g_curr_angle
 403 0074 910A863F 		.word	1065749137
 404              		.cfi_endproc
 405              	.LFE145:
 407              		.section	.text.handleFullAuto,"ax",%progbits
 408              		.align	1
 409              		.global	handleFullAuto
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 414              	handleFullAuto:
 415              	.LFB147:
 179:Swerve-Standard/src/launch_task.c **** 
 180:Swerve-Standard/src/launch_task.c **** void handleFullAuto() {
 416              		.loc 1 180 23 is_stmt 1 view -0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 10B5     		push	{r4, lr}
 421              	.LCFI8:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 4, -8
 424              		.cfi_offset 14, -4
 181:Swerve-Standard/src/launch_task.c ****     if (g_robot_state.launch.IS_BUSY) {
 425              		.loc 1 181 5 view .LVU73
 426              		.loc 1 181 29 is_stmt 0 view .LVU74
 427 0002 174B     		ldr	r3, .L26
 428 0004 93F82F30 		ldrb	r3, [r3, #47]	@ zero_extendqisi2
 429              		.loc 1 181 8 view .LVU75
 430 0008 C3B1     		cbz	r3, .L22
 182:Swerve-Standard/src/launch_task.c ****         if (g_robot_state.launch.fire_mode == NO_FIRE) {
 431              		.loc 1 182 9 is_stmt 1 view .LVU76
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 12


 432              		.loc 1 182 33 is_stmt 0 view .LVU77
 433 000a 154B     		ldr	r3, .L26
 434 000c 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 435              		.loc 1 182 12 view .LVU78
 436 0010 03B1     		cbz	r3, .L25
 437              	.L21:
 183:Swerve-Standard/src/launch_task.c ****             DJI_Motor_Set_Control_Mode(g_feed_motor, VELOCITY_CONTROL);
 184:Swerve-Standard/src/launch_task.c ****             DJI_Motor_Set_Velocity(g_feed_motor, 0);
 185:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.IS_BUSY = 0;
 186:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.busy_mode = IDLE;
 187:Swerve-Standard/src/launch_task.c ****             rejiggle();
 188:Swerve-Standard/src/launch_task.c ****         }
 189:Swerve-Standard/src/launch_task.c ****     } else {
 190:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Control_Mode(g_feed_motor, VELOCITY_CONTROL);
 191:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Velocity(g_feed_motor, FEED_RATE);
 192:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.IS_BUSY = 1;
 193:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.busy_mode = FULL_AUTO;
 194:Swerve-Standard/src/launch_task.c ****     }
 195:Swerve-Standard/src/launch_task.c **** }
 438              		.loc 1 195 1 view .LVU79
 439 0012 10BD     		pop	{r4, pc}
 440              	.L25:
 183:Swerve-Standard/src/launch_task.c ****             DJI_Motor_Set_Control_Mode(g_feed_motor, VELOCITY_CONTROL);
 441              		.loc 1 183 13 is_stmt 1 view .LVU80
 442 0014 134C     		ldr	r4, .L26+4
 443 0016 0121     		movs	r1, #1
 444 0018 2068     		ldr	r0, [r4]
 445 001a FFF7FEFF 		bl	DJI_Motor_Set_Control_Mode
 446              	.LVL24:
 184:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.IS_BUSY = 0;
 447              		.loc 1 184 13 view .LVU81
 448 001e 9FED120A 		vldr.32	s0, .L26+8
 449 0022 2068     		ldr	r0, [r4]
 450 0024 FFF7FEFF 		bl	DJI_Motor_Set_Velocity
 451              	.LVL25:
 185:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.busy_mode = IDLE;
 452              		.loc 1 185 13 view .LVU82
 185:Swerve-Standard/src/launch_task.c ****             g_robot_state.launch.busy_mode = IDLE;
 453              		.loc 1 185 42 is_stmt 0 view .LVU83
 454 0028 0D4B     		ldr	r3, .L26
 455 002a 0022     		movs	r2, #0
 456 002c 83F82F20 		strb	r2, [r3, #47]
 186:Swerve-Standard/src/launch_task.c ****             rejiggle();
 457              		.loc 1 186 13 is_stmt 1 view .LVU84
 186:Swerve-Standard/src/launch_task.c ****             rejiggle();
 458              		.loc 1 186 44 is_stmt 0 view .LVU85
 459 0030 0522     		movs	r2, #5
 460 0032 83F83120 		strb	r2, [r3, #49]
 187:Swerve-Standard/src/launch_task.c ****         }
 461              		.loc 1 187 13 is_stmt 1 view .LVU86
 462 0036 FFF7FEFF 		bl	rejiggle
 463              	.LVL26:
 464 003a EAE7     		b	.L21
 465              	.L22:
 190:Swerve-Standard/src/launch_task.c ****         DJI_Motor_Set_Velocity(g_feed_motor, FEED_RATE);
 466              		.loc 1 190 9 view .LVU87
 467 003c 094C     		ldr	r4, .L26+4
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 13


 468 003e 0121     		movs	r1, #1
 469 0040 2068     		ldr	r0, [r4]
 470 0042 FFF7FEFF 		bl	DJI_Motor_Set_Control_Mode
 471              	.LVL27:
 191:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.IS_BUSY = 1;
 472              		.loc 1 191 9 view .LVU88
 473 0046 9FED090A 		vldr.32	s0, .L26+12
 474 004a 2068     		ldr	r0, [r4]
 475 004c FFF7FEFF 		bl	DJI_Motor_Set_Velocity
 476              	.LVL28:
 192:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.busy_mode = FULL_AUTO;
 477              		.loc 1 192 9 view .LVU89
 192:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.busy_mode = FULL_AUTO;
 478              		.loc 1 192 38 is_stmt 0 view .LVU90
 479 0050 034B     		ldr	r3, .L26
 480 0052 0122     		movs	r2, #1
 481 0054 83F82F20 		strb	r2, [r3, #47]
 193:Swerve-Standard/src/launch_task.c ****     }
 482              		.loc 1 193 9 is_stmt 1 view .LVU91
 193:Swerve-Standard/src/launch_task.c ****     }
 483              		.loc 1 193 40 is_stmt 0 view .LVU92
 484 0058 0322     		movs	r2, #3
 485 005a 83F83120 		strb	r2, [r3, #49]
 486              		.loc 1 195 1 view .LVU93
 487 005e D8E7     		b	.L21
 488              	.L27:
 489              		.align	2
 490              	.L26:
 491 0060 00000000 		.word	g_robot_state
 492 0064 00000000 		.word	g_feed_motor
 493 0068 00000000 		.word	0
 494 006c 00001643 		.word	1125515264
 495              		.cfi_endproc
 496              	.LFE147:
 498              		.section	.text.startFlywheel,"ax",%progbits
 499              		.align	1
 500              		.global	startFlywheel
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 505              	startFlywheel:
 506              	.LFB148:
 196:Swerve-Standard/src/launch_task.c **** 
 197:Swerve-Standard/src/launch_task.c **** void startFlywheel() {
 507              		.loc 1 197 22 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511 0000 08B5     		push	{r3, lr}
 512              	.LCFI9:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 3, -8
 515              		.cfi_offset 14, -4
 516 0002 2DED028B 		vpush.64	{d8}
 517              	.LCFI10:
 518              		.cfi_def_cfa_offset 16
 519              		.cfi_offset 80, -16
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 14


 520              		.cfi_offset 81, -12
 198:Swerve-Standard/src/launch_task.c ****     DJI_Motor_Set_Velocity(g_flywheel_left, -320);
 521              		.loc 1 198 5 view .LVU95
 522 0006 9FED088A 		vldr.32	s16, .L30
 523 000a B0EE480A 		vmov.f32	s0, s16
 524 000e 074B     		ldr	r3, .L30+4
 525 0010 1868     		ldr	r0, [r3]
 526 0012 FFF7FEFF 		bl	DJI_Motor_Set_Velocity
 527              	.LVL29:
 199:Swerve-Standard/src/launch_task.c ****     DJI_Motor_Set_Velocity(g_flywheel_right, -320);
 528              		.loc 1 199 5 view .LVU96
 529 0016 B0EE480A 		vmov.f32	s0, s16
 530 001a 054B     		ldr	r3, .L30+8
 531 001c 1868     		ldr	r0, [r3]
 532 001e FFF7FEFF 		bl	DJI_Motor_Set_Velocity
 533              	.LVL30:
 200:Swerve-Standard/src/launch_task.c **** }
 534              		.loc 1 200 1 is_stmt 0 view .LVU97
 535 0022 BDEC028B 		vldm	sp!, {d8}
 536              	.LCFI11:
 537              		.cfi_restore 80
 538              		.cfi_restore 81
 539              		.cfi_def_cfa_offset 8
 540 0026 08BD     		pop	{r3, pc}
 541              	.L31:
 542              		.align	2
 543              	.L30:
 544 0028 0000A0C3 		.word	-1012924416
 545 002c 00000000 		.word	g_flywheel_left
 546 0030 00000000 		.word	g_flywheel_right
 547              		.cfi_endproc
 548              	.LFE148:
 550              		.section	.text.stopFlywheel,"ax",%progbits
 551              		.align	1
 552              		.global	stopFlywheel
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 557              	stopFlywheel:
 558              	.LFB149:
 201:Swerve-Standard/src/launch_task.c **** 
 202:Swerve-Standard/src/launch_task.c **** void stopFlywheel() {
 559              		.loc 1 202 21 is_stmt 1 view -0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563 0000 08B5     		push	{r3, lr}
 564              	.LCFI12:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 3, -8
 567              		.cfi_offset 14, -4
 568 0002 2DED028B 		vpush.64	{d8}
 569              	.LCFI13:
 570              		.cfi_def_cfa_offset 16
 571              		.cfi_offset 80, -16
 572              		.cfi_offset 81, -12
 203:Swerve-Standard/src/launch_task.c ****     DJI_Motor_Set_Velocity(g_flywheel_left, 0);
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 15


 573              		.loc 1 203 5 view .LVU99
 574 0006 9FED088A 		vldr.32	s16, .L34
 575 000a B0EE480A 		vmov.f32	s0, s16
 576 000e 074B     		ldr	r3, .L34+4
 577 0010 1868     		ldr	r0, [r3]
 578 0012 FFF7FEFF 		bl	DJI_Motor_Set_Velocity
 579              	.LVL31:
 204:Swerve-Standard/src/launch_task.c ****     DJI_Motor_Set_Velocity(g_flywheel_right, 0);
 580              		.loc 1 204 5 view .LVU100
 581 0016 B0EE480A 		vmov.f32	s0, s16
 582 001a 054B     		ldr	r3, .L34+8
 583 001c 1868     		ldr	r0, [r3]
 584 001e FFF7FEFF 		bl	DJI_Motor_Set_Velocity
 585              	.LVL32:
 205:Swerve-Standard/src/launch_task.c **** }
 586              		.loc 1 205 1 is_stmt 0 view .LVU101
 587 0022 BDEC028B 		vldm	sp!, {d8}
 588              	.LCFI14:
 589              		.cfi_restore 80
 590              		.cfi_restore 81
 591              		.cfi_def_cfa_offset 8
 592 0026 08BD     		pop	{r3, pc}
 593              	.L35:
 594              		.align	2
 595              	.L34:
 596 0028 00000000 		.word	0
 597 002c 00000000 		.word	g_flywheel_left
 598 0030 00000000 		.word	g_flywheel_right
 599              		.cfi_endproc
 600              	.LFE149:
 602              		.section	.text.Launch_Ctrl_Loop,"ax",%progbits
 603              		.align	1
 604              		.global	Launch_Ctrl_Loop
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 609              	Launch_Ctrl_Loop:
 610              	.LFB143:
  77:Swerve-Standard/src/launch_task.c ****     if (!g_robot_state.launch.IS_FIRING_ENABLED)
 611              		.loc 1 77 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615 0000 10B5     		push	{r4, lr}
 616              	.LCFI15:
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 4, -8
 619              		.cfi_offset 14, -4
  78:Swerve-Standard/src/launch_task.c ****     {
 620              		.loc 1 78 5 view .LVU103
  78:Swerve-Standard/src/launch_task.c ****     {
 621              		.loc 1 78 30 is_stmt 0 view .LVU104
 622 0002 1B4B     		ldr	r3, .L47
 623 0004 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
  78:Swerve-Standard/src/launch_task.c ****     {
 624              		.loc 1 78 8 view .LVU105
 625 0008 ABB1     		cbz	r3, .L46
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 16


  85:Swerve-Standard/src/launch_task.c ****         startFlywheel();
 626              		.loc 1 85 9 is_stmt 1 view .LVU106
  85:Swerve-Standard/src/launch_task.c ****         startFlywheel();
 627              		.loc 1 85 50 is_stmt 0 view .LVU107
 628 000a 194C     		ldr	r4, .L47
 629 000c 0123     		movs	r3, #1
 630 000e 84F82E30 		strb	r3, [r4, #46]
  86:Swerve-Standard/src/launch_task.c ****         Laser_On();
 631              		.loc 1 86 9 is_stmt 1 view .LVU108
 632 0012 FFF7FEFF 		bl	startFlywheel
 633              	.LVL33:
  87:Swerve-Standard/src/launch_task.c ****     }
 634              		.loc 1 87 9 view .LVU109
 635 0016 FFF7FEFF 		bl	Laser_On
 636              	.LVL34:
  90:Swerve-Standard/src/launch_task.c ****         switch (g_robot_state.launch.busy_mode)
 637              		.loc 1 90 5 view .LVU110
  90:Swerve-Standard/src/launch_task.c ****         switch (g_robot_state.launch.busy_mode)
 638              		.loc 1 90 29 is_stmt 0 view .LVU111
 639 001a 94F82F30 		ldrb	r3, [r4, #47]	@ zero_extendqisi2
  90:Swerve-Standard/src/launch_task.c ****         switch (g_robot_state.launch.busy_mode)
 640              		.loc 1 90 8 view .LVU112
 641 001e CBB1     		cbz	r3, .L39
  91:Swerve-Standard/src/launch_task.c ****         {
 642              		.loc 1 91 9 is_stmt 1 view .LVU113
  91:Swerve-Standard/src/launch_task.c ****         {
 643              		.loc 1 91 37 is_stmt 0 view .LVU114
 644 0020 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
  91:Swerve-Standard/src/launch_task.c ****         {
 645              		.loc 1 91 9 view .LVU115
 646 0024 032B     		cmp	r3, #3
 647 0026 12D0     		beq	.L40
 648 0028 042B     		cmp	r3, #4
 649 002a 0DD0     		beq	.L41
 650 002c 012B     		cmp	r3, #1
 651 002e 0AD1     		bne	.L36
  97:Swerve-Standard/src/launch_task.c ****             break;
 652              		.loc 1 97 13 is_stmt 1 view .LVU116
 653 0030 FFF7FEFF 		bl	handleSingleFire
 654              	.LVL35:
  98:Swerve-Standard/src/launch_task.c ****         case BURST_FIRE:
 655              		.loc 1 98 13 view .LVU117
 656 0034 07E0     		b	.L36
 657              	.L46:
  80:Swerve-Standard/src/launch_task.c ****         Laser_Off();
 658              		.loc 1 80 9 view .LVU118
 659 0036 FFF7FEFF 		bl	stopFlywheel
 660              	.LVL36:
  81:Swerve-Standard/src/launch_task.c ****         g_robot_state.launch.IS_FLYWHEEL_ENABLED = 0;
 661              		.loc 1 81 9 view .LVU119
 662 003a FFF7FEFF 		bl	Laser_Off
 663              	.LVL37:
  82:Swerve-Standard/src/launch_task.c ****         return;
 664              		.loc 1 82 9 view .LVU120
  82:Swerve-Standard/src/launch_task.c ****         return;
 665              		.loc 1 82 50 is_stmt 0 view .LVU121
 666 003e 0C4B     		ldr	r3, .L47
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 17


 667 0040 0022     		movs	r2, #0
 668 0042 83F82E20 		strb	r2, [r3, #46]
  83:Swerve-Standard/src/launch_task.c ****     } else {
 669              		.loc 1 83 9 is_stmt 1 view .LVU122
 670              	.L36:
 125:Swerve-Standard/src/launch_task.c **** 
 671              		.loc 1 125 1 is_stmt 0 view .LVU123
 672 0046 10BD     		pop	{r4, pc}
 673              	.L41:
  94:Swerve-Standard/src/launch_task.c ****             break;
 674              		.loc 1 94 13 is_stmt 1 view .LVU124
 675 0048 FFF7FEFF 		bl	rejiggle
 676              	.LVL38:
  95:Swerve-Standard/src/launch_task.c ****         case SINGLE_FIRE:
 677              		.loc 1 95 13 view .LVU125
 678 004c FBE7     		b	.L36
 679              	.L40:
 102:Swerve-Standard/src/launch_task.c ****             break;
 680              		.loc 1 102 13 view .LVU126
 681 004e FFF7FEFF 		bl	handleFullAuto
 682              	.LVL39:
 103:Swerve-Standard/src/launch_task.c ****         default:
 683              		.loc 1 103 13 view .LVU127
 684 0052 F8E7     		b	.L36
 685              	.L39:
 109:Swerve-Standard/src/launch_task.c ****         {
 686              		.loc 1 109 9 view .LVU128
 109:Swerve-Standard/src/launch_task.c ****         {
 687              		.loc 1 109 37 is_stmt 0 view .LVU129
 688 0054 064B     		ldr	r3, .L47
 689 0056 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 109:Swerve-Standard/src/launch_task.c ****         {
 690              		.loc 1 109 9 view .LVU130
 691 005a 012B     		cmp	r3, #1
 692 005c 04D0     		beq	.L43
 693 005e 032B     		cmp	r3, #3
 694 0060 F1D1     		bne	.L36
 118:Swerve-Standard/src/launch_task.c ****             break;
 695              		.loc 1 118 13 is_stmt 1 view .LVU131
 696 0062 FFF7FEFF 		bl	handleFullAuto
 697              	.LVL40:
 119:Swerve-Standard/src/launch_task.c ****         default:
 698              		.loc 1 119 13 view .LVU132
 699 0066 EEE7     		b	.L36
 700              	.L43:
 112:Swerve-Standard/src/launch_task.c ****             break;
 701              		.loc 1 112 13 view .LVU133
 702 0068 FFF7FEFF 		bl	handleSingleFire
 703              	.LVL41:
 113:Swerve-Standard/src/launch_task.c ****         case BURST_FIRE:
 704              		.loc 1 113 13 view .LVU134
 705 006c EBE7     		b	.L36
 706              	.L48:
 707 006e 00BF     		.align	2
 708              	.L47:
 709 0070 00000000 		.word	g_robot_state
 710              		.cfi_endproc
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 18


 711              	.LFE143:
 713              		.global	g_curr_angle
 714              		.section	.bss.g_curr_angle,"aw",%nobits
 715              		.align	2
 718              	g_curr_angle:
 719 0000 00000000 		.space	4
 720              		.global	g_feed_motor
 721              		.section	.bss.g_feed_motor,"aw",%nobits
 722              		.align	2
 725              	g_feed_motor:
 726 0000 00000000 		.space	4
 727              		.global	g_flywheel_right
 728              		.section	.bss.g_flywheel_right,"aw",%nobits
 729              		.align	2
 732              	g_flywheel_right:
 733 0000 00000000 		.space	4
 734              		.global	g_flywheel_left
 735              		.section	.bss.g_flywheel_left,"aw",%nobits
 736              		.align	2
 739              	g_flywheel_left:
 740 0000 00000000 		.space	4
 741              		.text
 742              	.Letext0:
 743              		.file 2 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 744              		.file 3 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 745              		.file 4 "control-base/typec-board-base/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM
 746              		.file 5 "control-base/algo/inc/pid.h"
 747              		.file 6 "control-base/devices/inc/motor.h"
 748              		.file 7 "control-base/devices/inc/dji_motor.h"
 749              		.file 8 "Swerve-Standard/inc/robot.h"
 750              		.file 9 "control-base/devices/inc/laser.h"
 751              		.file 10 "control-base/typec-board-base/Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 752              		.file 11 "<built-in>"
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 launch_task.c
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:21     .text.Launch_Task_Init:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:27     .text.Launch_Task_Init:00000000 Launch_Task_Init
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:147    .text.Launch_Task_Init:000000c4 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:739    .bss.g_flywheel_left:00000000 g_flywheel_left
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:732    .bss.g_flywheel_right:00000000 g_flywheel_right
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:725    .bss.g_feed_motor:00000000 g_feed_motor
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:163    .text.resetRelPos:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:169    .text.resetRelPos:00000000 resetRelPos
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:198    .text.resetRelPos:0000001c $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:203    .text.rejiggle:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:209    .text.rejiggle:00000000 rejiggle
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:308    .text.rejiggle:0000007c $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:316    .text.handleSingleFire:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:322    .text.handleSingleFire:00000000 handleSingleFire
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:399    .text.handleSingleFire:00000064 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:718    .bss.g_curr_angle:00000000 g_curr_angle
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:408    .text.handleFullAuto:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:414    .text.handleFullAuto:00000000 handleFullAuto
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:491    .text.handleFullAuto:00000060 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:499    .text.startFlywheel:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:505    .text.startFlywheel:00000000 startFlywheel
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:544    .text.startFlywheel:00000028 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:551    .text.stopFlywheel:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:557    .text.stopFlywheel:00000000 stopFlywheel
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:596    .text.stopFlywheel:00000028 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:603    .text.Launch_Ctrl_Loop:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:609    .text.Launch_Ctrl_Loop:00000000 Launch_Ctrl_Loop
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:709    .text.Launch_Ctrl_Loop:00000070 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:715    .bss.g_curr_angle:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:722    .bss.g_feed_motor:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:729    .bss.g_flywheel_right:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//ccFAHw35.s:736    .bss.g_flywheel_left:00000000 $d

UNDEFINED SYMBOLS
memset
DJI_Motor_Init
Laser_Init
xTaskGetTickCount
g_robot_state
DJI_Motor_Get_Total_Angle
DJI_Motor_Is_At_Angle
DJI_Motor_Set_Control_Mode
DJI_Motor_Set_Angle
DJI_Motor_Set_Velocity
Laser_On
Laser_Off
