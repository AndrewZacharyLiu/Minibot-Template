ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bsp_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "control-base/bsp/src/bsp_can.c"
  20              		.section	.text.CAN_Filter_Init,"ax",%progbits
  21              		.align	1
  22              		.global	CAN_Filter_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	CAN_Filter_Init:
  28              	.LVL0:
  29              	.LFB142:
   1:control-base/bsp/src/bsp_can.c **** #include "bsp_can.h"
   2:control-base/bsp/src/bsp_can.c **** #include <stdlib.h>
   3:control-base/bsp/src/bsp_can.c **** 
   4:control-base/bsp/src/bsp_can.c **** static CAN_Instance_t *g_can1_can_instances[CAN_MAX_DEVICE] = {NULL};
   5:control-base/bsp/src/bsp_can.c **** static uint8_t g_can1_device_count = 0;
   6:control-base/bsp/src/bsp_can.c **** static CAN_Instance_t *g_can2_can_instances[CAN_MAX_DEVICE] = {NULL};
   7:control-base/bsp/src/bsp_can.c **** static uint8_t g_can2_device_count = 0;
   8:control-base/bsp/src/bsp_can.c **** 
   9:control-base/bsp/src/bsp_can.c **** CAN_RxHeaderTypeDef g_rx_header;
  10:control-base/bsp/src/bsp_can.c **** uint8_t g_can_data[8];
  11:control-base/bsp/src/bsp_can.c **** 
  12:control-base/bsp/src/bsp_can.c **** void CAN_Init(CAN_HandleTypeDef *hcanx);
  13:control-base/bsp/src/bsp_can.c **** void CAN_SendTOQueue(uint8_t can_bus, uint32_t id, uint8_t data[8]);
  14:control-base/bsp/src/bsp_can.c **** 
  15:control-base/bsp/src/bsp_can.c **** /**
  16:control-base/bsp/src/bsp_can.c ****  * Initialize the CAN filter for a CAN instance @ref typedef CAN_Instance_t
  17:control-base/bsp/src/bsp_can.c ****  * 
  18:control-base/bsp/src/bsp_can.c ****  * TODO: utilize the filter bank for better performance, all filter banks are 
  19:control-base/bsp/src/bsp_can.c ****  * initialized to filter nothing.
  20:control-base/bsp/src/bsp_can.c **** */
  21:control-base/bsp/src/bsp_can.c **** void CAN_Filter_Init(CAN_Instance_t *can_instance)
  22:control-base/bsp/src/bsp_can.c **** {
  30              		.loc 1 22 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 22 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 2


  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  23:control-base/bsp/src/bsp_can.c ****     static uint8_t can1_filter_count = 0, can2_filter_count = 14; // can 1 filter starts from 0, ca
  42              		.loc 1 23 5 is_stmt 1 view .LVU2
  24:control-base/bsp/src/bsp_can.c ****     /* set the CAN filter */
  25:control-base/bsp/src/bsp_can.c ****     CAN_FilterTypeDef can_filter;
  43              		.loc 1 25 5 view .LVU3
  26:control-base/bsp/src/bsp_can.c ****     // ID mask mode. FilterIdHigh, FilterIdLow, FilterMaskIdHigh, FilterMaskIdLow correspond to reg
  27:control-base/bsp/src/bsp_can.c ****     // mask mode would define behavior of these registers. Check the reference manual for more info
  28:control-base/bsp/src/bsp_can.c ****     can_filter.FilterMode = CAN_FILTERMODE_IDMASK;
  44              		.loc 1 28 5 view .LVU4
  45              		.loc 1 28 27 is_stmt 0 view .LVU5
  46 0004 0023     		movs	r3, #0
  47 0006 0693     		str	r3, [sp, #24]
  29:control-base/bsp/src/bsp_can.c ****     can_filter.FilterScale = CAN_FILTERSCALE_32BIT;
  48              		.loc 1 29 5 is_stmt 1 view .LVU6
  49              		.loc 1 29 28 is_stmt 0 view .LVU7
  50 0008 0123     		movs	r3, #1
  51 000a 0793     		str	r3, [sp, #28]
  30:control-base/bsp/src/bsp_can.c ****     can_filter.FilterFIFOAssignment = ((can_instance->rx_id & 1) == 0) ? CAN_FILTER_FIFO0 : CAN_FIL
  52              		.loc 1 30 5 is_stmt 1 view .LVU8
  53              		.loc 1 30 53 is_stmt 0 view .LVU9
  54 000c 0389     		ldrh	r3, [r0, #8]
  55              		.loc 1 30 91 view .LVU10
  56 000e 03F00103 		and	r3, r3, #1
  57              		.loc 1 30 37 view .LVU11
  58 0012 0493     		str	r3, [sp, #16]
  31:control-base/bsp/src/bsp_can.c ****     can_filter.FilterBank = (can_instance->can_bus == 1) ? can1_filter_count++ : can2_filter_count+
  59              		.loc 1 31 5 is_stmt 1 view .LVU12
  60              		.loc 1 31 42 is_stmt 0 view .LVU13
  61 0014 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  62              		.loc 1 31 80 view .LVU14
  63 0016 012B     		cmp	r3, #1
  64 0018 17D0     		beq	.L7
  65              		.loc 1 31 99 discriminator 2 view .LVU15
  66 001a 0F4A     		ldr	r2, .L9
  67 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  68 001e 591C     		adds	r1, r3, #1
  69 0020 1170     		strb	r1, [r2]
  70              	.L3:
  71              		.loc 1 31 27 discriminator 4 view .LVU16
  72 0022 0593     		str	r3, [sp, #20]
  32:control-base/bsp/src/bsp_can.c ****     can_filter.SlaveStartFilterBank = 14; // CAN 2 is the slave of CAN 1, distribute 0-13 to CAN 1,
  73              		.loc 1 32 5 is_stmt 1 view .LVU17
  74              		.loc 1 32 37 is_stmt 0 view .LVU18
  75 0024 0E23     		movs	r3, #14
  76 0026 0993     		str	r3, [sp, #36]
  33:control-base/bsp/src/bsp_can.c ****     can_filter.FilterActivation = CAN_FILTER_ENABLE;
  77              		.loc 1 33 5 is_stmt 1 view .LVU19
  78              		.loc 1 33 33 is_stmt 0 view .LVU20
  79 0028 0123     		movs	r3, #1
  80 002a 0893     		str	r3, [sp, #32]
  34:control-base/bsp/src/bsp_can.c ****     can_filter.FilterIdHigh = 0; //can_instance->rx_id << 5;                // standard id is 11 bi
  81              		.loc 1 34 5 is_stmt 1 view .LVU21
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 3


  82              		.loc 1 34 29 is_stmt 0 view .LVU22
  83 002c 0023     		movs	r3, #0
  84 002e 0093     		str	r3, [sp]
  35:control-base/bsp/src/bsp_can.c ****     can_filter.FilterIdLow = 0;                 // the second id is not used
  85              		.loc 1 35 5 is_stmt 1 view .LVU23
  86              		.loc 1 35 28 is_stmt 0 view .LVU24
  87 0030 0193     		str	r3, [sp, #4]
  36:control-base/bsp/src/bsp_can.c ****     can_filter.FilterMaskIdHigh = 0;            // the third id is not used
  88              		.loc 1 36 5 is_stmt 1 view .LVU25
  89              		.loc 1 36 33 is_stmt 0 view .LVU26
  90 0032 0293     		str	r3, [sp, #8]
  37:control-base/bsp/src/bsp_can.c ****     can_filter.FilterMaskIdLow = 0;             // the fourth id is not used
  91              		.loc 1 37 5 is_stmt 1 view .LVU27
  92              		.loc 1 37 32 is_stmt 0 view .LVU28
  93 0034 0393     		str	r3, [sp, #12]
  38:control-base/bsp/src/bsp_can.c ****     HAL_CAN_ConfigFilter((can_instance->can_bus == 1) ? &hcan1 : &hcan2, &can_filter);
  94              		.loc 1 38 5 is_stmt 1 view .LVU29
  95              		.loc 1 38 39 is_stmt 0 view .LVU30
  96 0036 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  97              		.loc 1 38 5 view .LVU31
  98 0038 012B     		cmp	r3, #1
  99 003a 0BD0     		beq	.L8
 100              		.loc 1 38 5 discriminator 2 view .LVU32
 101 003c 0748     		ldr	r0, .L9+4
 102              	.LVL1:
 103              	.L4:
 104              		.loc 1 38 5 discriminator 4 view .LVU33
 105 003e 6946     		mov	r1, sp
 106 0040 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 107              	.LVL2:
  39:control-base/bsp/src/bsp_can.c **** }
 108              		.loc 1 39 1 view .LVU34
 109 0044 0BB0     		add	sp, sp, #44
 110              	.LCFI2:
 111              		.cfi_remember_state
 112              		.cfi_def_cfa_offset 4
 113              		@ sp needed
 114 0046 5DF804FB 		ldr	pc, [sp], #4
 115              	.LVL3:
 116              	.L7:
 117              	.LCFI3:
 118              		.cfi_restore_state
  31:control-base/bsp/src/bsp_can.c ****     can_filter.SlaveStartFilterBank = 14; // CAN 2 is the slave of CAN 1, distribute 0-13 to CAN 1,
 119              		.loc 1 31 77 discriminator 1 view .LVU35
 120 004a 054A     		ldr	r2, .L9+8
 121 004c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 122 004e 591C     		adds	r1, r3, #1
 123 0050 1170     		strb	r1, [r2]
 124 0052 E6E7     		b	.L3
 125              	.L8:
  38:control-base/bsp/src/bsp_can.c ****     HAL_CAN_ConfigFilter((can_instance->can_bus == 1) ? &hcan1 : &hcan2, &can_filter);
 126              		.loc 1 38 5 discriminator 1 view .LVU36
 127 0054 0348     		ldr	r0, .L9+12
 128              	.LVL4:
  38:control-base/bsp/src/bsp_can.c ****     HAL_CAN_ConfigFilter((can_instance->can_bus == 1) ? &hcan1 : &hcan2, &can_filter);
 129              		.loc 1 38 5 discriminator 1 view .LVU37
 130 0056 F2E7     		b	.L4
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 4


 131              	.L10:
 132              		.align	2
 133              	.L9:
 134 0058 00000000 		.word	can2_filter_count.1
 135 005c 00000000 		.word	hcan2
 136 0060 00000000 		.word	can1_filter_count.2
 137 0064 00000000 		.word	hcan1
 138              		.cfi_endproc
 139              	.LFE142:
 141              		.section	.text.CAN_Device_Register,"ax",%progbits
 142              		.align	1
 143              		.global	CAN_Device_Register
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	CAN_Device_Register:
 149              	.LVL5:
 150              	.LFB143:
  40:control-base/bsp/src/bsp_can.c **** /**
  41:control-base/bsp/src/bsp_can.c ****  * @brief  CAN Device Registration Function
  42:control-base/bsp/src/bsp_can.c ****  * 
  43:control-base/bsp/src/bsp_can.c ****  * @param can_bus can bus number (1 or 2)
  44:control-base/bsp/src/bsp_can.c ****  * @param can_id can id of the device (0x000 to 0x7FF)
  45:control-base/bsp/src/bsp_can.c ****  * @param can_module_callback callback function for the can module
  46:control-base/bsp/src/bsp_can.c ****  * 
  47:control-base/bsp/src/bsp_can.c ****  * @return CAN_Instance_t* the pointer to the can_instance
  48:control-base/bsp/src/bsp_can.c **** */
  49:control-base/bsp/src/bsp_can.c **** CAN_Instance_t *CAN_Device_Register(uint8_t _can_bus, uint16_t _tx_id, uint16_t _rx_id, void (*can_
  50:control-base/bsp/src/bsp_can.c **** {
 151              		.loc 1 50 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 50 1 is_stmt 0 view .LVU39
 156 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 157              	.LCFI4:
 158              		.cfi_def_cfa_offset 24
 159              		.cfi_offset 4, -24
 160              		.cfi_offset 5, -20
 161              		.cfi_offset 6, -16
 162              		.cfi_offset 7, -12
 163              		.cfi_offset 8, -8
 164              		.cfi_offset 14, -4
 165 0004 0546     		mov	r5, r0
 166 0006 0E46     		mov	r6, r1
 167 0008 9046     		mov	r8, r2
 168 000a 1F46     		mov	r7, r3
  51:control-base/bsp/src/bsp_can.c ****     CAN_Instance_t *can_instance = malloc(sizeof(CAN_Instance_t));
 169              		.loc 1 51 5 is_stmt 1 view .LVU40
 170              		.loc 1 51 36 is_stmt 0 view .LVU41
 171 000c 2420     		movs	r0, #36
 172              	.LVL6:
 173              		.loc 1 51 36 view .LVU42
 174 000e FFF7FEFF 		bl	malloc
 175              	.LVL7:
 176              		.loc 1 51 36 view .LVU43
 177 0012 0446     		mov	r4, r0
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 5


 178              	.LVL8:
  52:control-base/bsp/src/bsp_can.c ****     
  53:control-base/bsp/src/bsp_can.c ****     // define can bus, can id, callback function
  54:control-base/bsp/src/bsp_can.c ****     can_instance->can_bus = _can_bus;
 179              		.loc 1 54 5 is_stmt 1 view .LVU44
 180              		.loc 1 54 27 is_stmt 0 view .LVU45
 181 0014 0570     		strb	r5, [r0]
  55:control-base/bsp/src/bsp_can.c ****     can_instance->rx_id = _rx_id;
 182              		.loc 1 55 5 is_stmt 1 view .LVU46
 183              		.loc 1 55 25 is_stmt 0 view .LVU47
 184 0016 A0F80880 		strh	r8, [r0, #8]	@ movhi
  56:control-base/bsp/src/bsp_can.c ****     can_instance->can_module_callback = can_module_callback;
 185              		.loc 1 56 5 is_stmt 1 view .LVU48
 186              		.loc 1 56 39 is_stmt 0 view .LVU49
 187 001a C761     		str	r7, [r0, #28]
  57:control-base/bsp/src/bsp_can.c ****     
  58:control-base/bsp/src/bsp_can.c ****     // allocate memory for tx_header and rx_header
  59:control-base/bsp/src/bsp_can.c ****     can_instance->tx_header = malloc(sizeof(CAN_TxHeaderTypeDef));
 188              		.loc 1 59 5 is_stmt 1 view .LVU50
 189              		.loc 1 59 31 is_stmt 0 view .LVU51
 190 001c 1820     		movs	r0, #24
 191              	.LVL9:
 192              		.loc 1 59 31 view .LVU52
 193 001e FFF7FEFF 		bl	malloc
 194              	.LVL10:
 195              		.loc 1 59 29 discriminator 1 view .LVU53
 196 0022 6060     		str	r0, [r4, #4]
  60:control-base/bsp/src/bsp_can.c ****     can_instance->tx_header->StdId = _tx_id;
 197              		.loc 1 60 5 is_stmt 1 view .LVU54
 198              		.loc 1 60 36 is_stmt 0 view .LVU55
 199 0024 0660     		str	r6, [r0]
  61:control-base/bsp/src/bsp_can.c ****     can_instance->tx_header->IDE = CAN_ID_STD;
 200              		.loc 1 61 5 is_stmt 1 view .LVU56
 201              		.loc 1 61 34 is_stmt 0 view .LVU57
 202 0026 0023     		movs	r3, #0
 203 0028 8360     		str	r3, [r0, #8]
  62:control-base/bsp/src/bsp_can.c ****     can_instance->tx_header->RTR = CAN_RTR_DATA;
 204              		.loc 1 62 5 is_stmt 1 view .LVU58
 205              		.loc 1 62 34 is_stmt 0 view .LVU59
 206 002a C360     		str	r3, [r0, #12]
  63:control-base/bsp/src/bsp_can.c ****     can_instance->tx_header->DLC = 0x08;
 207              		.loc 1 63 5 is_stmt 1 view .LVU60
 208              		.loc 1 63 34 is_stmt 0 view .LVU61
 209 002c 0823     		movs	r3, #8
 210 002e 0361     		str	r3, [r0, #16]
  64:control-base/bsp/src/bsp_can.c **** 
  65:control-base/bsp/src/bsp_can.c ****     // assign pointer to the can_instance to the global array
  66:control-base/bsp/src/bsp_can.c ****     switch (_can_bus)
 211              		.loc 1 66 5 is_stmt 1 view .LVU62
 212 0030 012D     		cmp	r5, #1
 213 0032 09D0     		beq	.L12
 214 0034 022D     		cmp	r5, #2
 215 0036 0ED1     		bne	.L14
  67:control-base/bsp/src/bsp_can.c ****     {
  68:control-base/bsp/src/bsp_can.c ****     case 1:
  69:control-base/bsp/src/bsp_can.c ****         g_can1_can_instances[g_can1_device_count++] = can_instance;
  70:control-base/bsp/src/bsp_can.c ****         break;
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 6


  71:control-base/bsp/src/bsp_can.c ****     case 2:
  72:control-base/bsp/src/bsp_can.c ****         g_can2_can_instances[g_can2_device_count++] = can_instance;
 216              		.loc 1 72 9 view .LVU63
 217              		.loc 1 72 49 is_stmt 0 view .LVU64
 218 0038 0A4A     		ldr	r2, .L16
 219 003a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 220 003c 591C     		adds	r1, r3, #1
 221 003e 1170     		strb	r1, [r2]
 222              		.loc 1 72 53 view .LVU65
 223 0040 094A     		ldr	r2, .L16+4
 224 0042 42F82340 		str	r4, [r2, r3, lsl #2]
  73:control-base/bsp/src/bsp_can.c ****         break;
 225              		.loc 1 73 9 is_stmt 1 view .LVU66
 226 0046 06E0     		b	.L14
 227              	.L12:
  69:control-base/bsp/src/bsp_can.c ****         break;
 228              		.loc 1 69 9 view .LVU67
  69:control-base/bsp/src/bsp_can.c ****         break;
 229              		.loc 1 69 49 is_stmt 0 view .LVU68
 230 0048 084A     		ldr	r2, .L16+8
 231 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 232 004c 591C     		adds	r1, r3, #1
 233 004e 1170     		strb	r1, [r2]
  69:control-base/bsp/src/bsp_can.c ****         break;
 234              		.loc 1 69 53 view .LVU69
 235 0050 074A     		ldr	r2, .L16+12
 236 0052 42F82340 		str	r4, [r2, r3, lsl #2]
  70:control-base/bsp/src/bsp_can.c ****     case 2:
 237              		.loc 1 70 9 is_stmt 1 view .LVU70
 238              	.L14:
  74:control-base/bsp/src/bsp_can.c ****     default:
  75:control-base/bsp/src/bsp_can.c ****         // TODO: LOG can bus need to be 1 or 2
  76:control-base/bsp/src/bsp_can.c ****         break;
  77:control-base/bsp/src/bsp_can.c ****     }
  78:control-base/bsp/src/bsp_can.c ****     
  79:control-base/bsp/src/bsp_can.c ****     CAN_Filter_Init(can_instance);
 239              		.loc 1 79 5 view .LVU71
 240 0056 2046     		mov	r0, r4
 241 0058 FFF7FEFF 		bl	CAN_Filter_Init
 242              	.LVL11:
  80:control-base/bsp/src/bsp_can.c ****     return can_instance;
 243              		.loc 1 80 5 view .LVU72
  81:control-base/bsp/src/bsp_can.c **** }
 244              		.loc 1 81 1 is_stmt 0 view .LVU73
 245 005c 2046     		mov	r0, r4
 246 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 247              	.LVL12:
 248              	.L17:
 249              		.loc 1 81 1 view .LVU74
 250 0062 00BF     		.align	2
 251              	.L16:
 252 0064 00000000 		.word	g_can2_device_count
 253 0068 00000000 		.word	g_can2_can_instances
 254 006c 00000000 		.word	g_can1_device_count
 255 0070 00000000 		.word	g_can1_can_instances
 256              		.cfi_endproc
 257              	.LFE143:
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 7


 259              		.section	.text.CAN_Service_Init,"ax",%progbits
 260              		.align	1
 261              		.global	CAN_Service_Init
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	CAN_Service_Init:
 267              	.LFB144:
  82:control-base/bsp/src/bsp_can.c **** 
  83:control-base/bsp/src/bsp_can.c **** /**
  84:control-base/bsp/src/bsp_can.c ****  * @brief  CAN Service Initialization
  85:control-base/bsp/src/bsp_can.c **** */
  86:control-base/bsp/src/bsp_can.c **** void CAN_Service_Init()
  87:control-base/bsp/src/bsp_can.c **** {
 268              		.loc 1 87 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 38B5     		push	{r3, r4, r5, lr}
 273              	.LCFI5:
 274              		.cfi_def_cfa_offset 16
 275              		.cfi_offset 3, -16
 276              		.cfi_offset 4, -12
 277              		.cfi_offset 5, -8
 278              		.cfi_offset 14, -4
  88:control-base/bsp/src/bsp_can.c ****     /* Start CAN Communication */
  89:control-base/bsp/src/bsp_can.c ****     HAL_CAN_Start(&hcan1);
 279              		.loc 1 89 5 view .LVU76
 280 0002 0C4D     		ldr	r5, .L20
 281 0004 2846     		mov	r0, r5
 282 0006 FFF7FEFF 		bl	HAL_CAN_Start
 283              	.LVL13:
  90:control-base/bsp/src/bsp_can.c ****     HAL_CAN_Start(&hcan2);
 284              		.loc 1 90 5 view .LVU77
 285 000a 0B4C     		ldr	r4, .L20+4
 286 000c 2046     		mov	r0, r4
 287 000e FFF7FEFF 		bl	HAL_CAN_Start
 288              	.LVL14:
  91:control-base/bsp/src/bsp_can.c **** 
  92:control-base/bsp/src/bsp_can.c ****     /* Activate Interrupt */
  93:control-base/bsp/src/bsp_can.c ****     HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 289              		.loc 1 93 5 view .LVU78
 290 0012 0221     		movs	r1, #2
 291 0014 2846     		mov	r0, r5
 292 0016 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 293              	.LVL15:
  94:control-base/bsp/src/bsp_can.c ****     HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 294              		.loc 1 94 5 view .LVU79
 295 001a 0221     		movs	r1, #2
 296 001c 2046     		mov	r0, r4
 297 001e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 298              	.LVL16:
  95:control-base/bsp/src/bsp_can.c ****     HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO1_MSG_PENDING);
 299              		.loc 1 95 5 view .LVU80
 300 0022 1021     		movs	r1, #16
 301 0024 2846     		mov	r0, r5
 302 0026 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 8


 303              	.LVL17:
  96:control-base/bsp/src/bsp_can.c ****     HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING);
 304              		.loc 1 96 5 view .LVU81
 305 002a 1021     		movs	r1, #16
 306 002c 2046     		mov	r0, r4
 307 002e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 308              	.LVL18:
  97:control-base/bsp/src/bsp_can.c **** }
 309              		.loc 1 97 1 is_stmt 0 view .LVU82
 310 0032 38BD     		pop	{r3, r4, r5, pc}
 311              	.L21:
 312              		.align	2
 313              	.L20:
 314 0034 00000000 		.word	hcan1
 315 0038 00000000 		.word	hcan2
 316              		.cfi_endproc
 317              	.LFE144:
 319              		.section	.text.CAN_Transmit,"ax",%progbits
 320              		.align	1
 321              		.global	CAN_Transmit
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	CAN_Transmit:
 327              	.LVL19:
 328              	.LFB145:
  98:control-base/bsp/src/bsp_can.c **** 
  99:control-base/bsp/src/bsp_can.c **** /**
 100:control-base/bsp/src/bsp_can.c ****  * @brief  Transmit a CAN message
 101:control-base/bsp/src/bsp_can.c **** */
 102:control-base/bsp/src/bsp_can.c **** HAL_StatusTypeDef CAN_Transmit(CAN_Instance_t *can_instance)
 103:control-base/bsp/src/bsp_can.c **** {
 329              		.loc 1 103 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		.loc 1 103 1 is_stmt 0 view .LVU84
 334 0000 38B5     		push	{r3, r4, r5, lr}
 335              	.LCFI6:
 336              		.cfi_def_cfa_offset 16
 337              		.cfi_offset 3, -16
 338              		.cfi_offset 4, -12
 339              		.cfi_offset 5, -8
 340              		.cfi_offset 14, -4
 341 0002 0546     		mov	r5, r0
 104:control-base/bsp/src/bsp_can.c ****     // Select the correct CAN bus
 105:control-base/bsp/src/bsp_can.c ****     CAN_HandleTypeDef *hcanx = (can_instance->can_bus == 1) ? &hcan1 : &hcan2;
 342              		.loc 1 105 5 is_stmt 1 view .LVU85
 343              		.loc 1 105 45 is_stmt 0 view .LVU86
 344 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 345              		.loc 1 105 70 view .LVU87
 346 0006 012B     		cmp	r3, #1
 347 0008 0DD0     		beq	.L27
 348              		.loc 1 105 70 discriminator 2 view .LVU88
 349 000a 084C     		ldr	r4, .L28
 350              	.LVL20:
 106:control-base/bsp/src/bsp_can.c ****     // Wait for available mailbox
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 9


 107:control-base/bsp/src/bsp_can.c ****     while (HAL_CAN_GetTxMailboxesFreeLevel(hcanx) == 0);
 351              		.loc 1 107 5 is_stmt 1 view .LVU89
 352              	.L24:
 353              		.loc 1 107 51 discriminator 1 view .LVU90
 354              		.loc 1 107 12 is_stmt 0 discriminator 1 view .LVU91
 355 000c 2046     		mov	r0, r4
 356 000e FFF7FEFF 		bl	HAL_CAN_GetTxMailboxesFreeLevel
 357              	.LVL21:
 358              		.loc 1 107 51 discriminator 1 view .LVU92
 359 0012 0028     		cmp	r0, #0
 360 0014 FAD0     		beq	.L24
 108:control-base/bsp/src/bsp_can.c ****     // Transmit the message
 109:control-base/bsp/src/bsp_can.c ****     return HAL_CAN_AddTxMessage(hcanx, can_instance->tx_header, can_instance->tx_buffer, (uint32_t 
 361              		.loc 1 109 5 is_stmt 1 view .LVU93
 362              		.loc 1 109 12 is_stmt 0 view .LVU94
 363 0016 0123     		movs	r3, #1
 364 0018 05F10A02 		add	r2, r5, #10
 365 001c 6968     		ldr	r1, [r5, #4]
 366 001e 2046     		mov	r0, r4
 367 0020 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 368              	.LVL22:
 110:control-base/bsp/src/bsp_can.c **** }
 369              		.loc 1 110 1 view .LVU95
 370 0024 38BD     		pop	{r3, r4, r5, pc}
 371              	.LVL23:
 372              	.L27:
 105:control-base/bsp/src/bsp_can.c ****     // Wait for available mailbox
 373              		.loc 1 105 70 discriminator 1 view .LVU96
 374 0026 024C     		ldr	r4, .L28+4
 375 0028 F0E7     		b	.L24
 376              	.L29:
 377 002a 00BF     		.align	2
 378              	.L28:
 379 002c 00000000 		.word	hcan2
 380 0030 00000000 		.word	hcan1
 381              		.cfi_endproc
 382              	.LFE145:
 384              		.section	.text.CAN_Rx_Callback,"ax",%progbits
 385              		.align	1
 386              		.global	CAN_Rx_Callback
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	CAN_Rx_Callback:
 392              	.LVL24:
 393              	.LFB146:
 111:control-base/bsp/src/bsp_can.c **** 
 112:control-base/bsp/src/bsp_can.c **** /**
 113:control-base/bsp/src/bsp_can.c ****  * @brief  Callback function for CAN Receive. This function is called when a message
 114:control-base/bsp/src/bsp_can.c ****  * is received in FIFO0 or FIFO1. The function will iterate through the registered
 115:control-base/bsp/src/bsp_can.c ****  * can instances and call the callback function binded to the can instance
 116:control-base/bsp/src/bsp_can.c **** */
 117:control-base/bsp/src/bsp_can.c **** void CAN_Rx_Callback(CAN_HandleTypeDef *hcan, uint8_t fifo_num) {
 394              		.loc 1 117 65 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 8
 397              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 10


 398              		.loc 1 117 65 is_stmt 0 view .LVU98
 399 0000 10B5     		push	{r4, lr}
 400              	.LCFI7:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 4, -8
 403              		.cfi_offset 14, -4
 404 0002 82B0     		sub	sp, sp, #8
 405              	.LCFI8:
 406              		.cfi_def_cfa_offset 16
 407 0004 0446     		mov	r4, r0
 118:control-base/bsp/src/bsp_can.c ****     static CAN_RxHeaderTypeDef rx_header;
 408              		.loc 1 118 5 is_stmt 1 view .LVU99
 119:control-base/bsp/src/bsp_can.c ****     uint8_t can_rx_buff[8];
 409              		.loc 1 119 5 view .LVU100
 120:control-base/bsp/src/bsp_can.c ****     // Get the message from the FIFO
 121:control-base/bsp/src/bsp_can.c ****     if (HAL_CAN_GetRxMessage(hcan, fifo_num, &rx_header, can_rx_buff) == HAL_OK)
 410              		.loc 1 121 5 view .LVU101
 411              		.loc 1 121 9 is_stmt 0 view .LVU102
 412 0006 6B46     		mov	r3, sp
 413 0008 244A     		ldr	r2, .L44
 414 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 415              	.LVL25:
 416              		.loc 1 121 8 discriminator 1 view .LVU103
 417 000e 50B9     		cbnz	r0, .L30
 418 0010 0346     		mov	r3, r0
 419              	.LBB2:
 122:control-base/bsp/src/bsp_can.c ****     {
 123:control-base/bsp/src/bsp_can.c ****         // Select the correct CAN bus
 124:control-base/bsp/src/bsp_can.c ****         uint8_t can_bus = (hcan->Instance == hcan1.Instance) ? 1 : 2;
 420              		.loc 1 124 9 is_stmt 1 view .LVU104
 421              		.loc 1 124 32 is_stmt 0 view .LVU105
 422 0012 2168     		ldr	r1, [r4]
 423              		.loc 1 124 51 view .LVU106
 424 0014 224A     		ldr	r2, .L44+4
 425 0016 1268     		ldr	r2, [r2]
 426              		.loc 1 124 17 view .LVU107
 427 0018 9142     		cmp	r1, r2
 428 001a 06D0     		beq	.L41
 429              		.loc 1 124 17 discriminator 2 view .LVU108
 430 001c 0222     		movs	r2, #2
 431              	.L32:
 432              	.LVL26:
 125:control-base/bsp/src/bsp_can.c ****         switch (can_bus)
 433              		.loc 1 125 9 is_stmt 1 view .LVU109
 434 001e 012A     		cmp	r2, #1
 435 0020 11D0     		beq	.L33
 436 0022 022A     		cmp	r2, #2
 437 0024 2AD0     		beq	.L34
 438              	.LVL27:
 439              	.L30:
 440              		.loc 1 125 9 is_stmt 0 view .LVU110
 441              	.LBE2:
 126:control-base/bsp/src/bsp_can.c ****         {
 127:control-base/bsp/src/bsp_can.c ****         case 1:
 128:control-base/bsp/src/bsp_can.c ****             // Iterate through the registered can1 instances
 129:control-base/bsp/src/bsp_can.c ****             for (uint8_t i = 0; i < g_can1_device_count; i++)
 130:control-base/bsp/src/bsp_can.c ****             {
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 11


 131:control-base/bsp/src/bsp_can.c ****                 if (g_can1_can_instances[i]->rx_id == rx_header.StdId)
 132:control-base/bsp/src/bsp_can.c ****                 {
 133:control-base/bsp/src/bsp_can.c ****                     // move the received data to the rx buffer in the can instance
 134:control-base/bsp/src/bsp_can.c ****                     memmove(g_can1_can_instances[i]->rx_buffer, can_rx_buff, 8);
 135:control-base/bsp/src/bsp_can.c ****                     g_can1_can_instances[i]->can_module_callback(g_can1_can_instances[i]);
 136:control-base/bsp/src/bsp_can.c ****                     break;
 137:control-base/bsp/src/bsp_can.c ****                 }
 138:control-base/bsp/src/bsp_can.c ****             }
 139:control-base/bsp/src/bsp_can.c ****             break;
 140:control-base/bsp/src/bsp_can.c ****         case 2:
 141:control-base/bsp/src/bsp_can.c ****             // Iterate through the registered can1 instances
 142:control-base/bsp/src/bsp_can.c ****             for (uint8_t i = 0; i < g_can2_device_count; i++)
 143:control-base/bsp/src/bsp_can.c ****             {
 144:control-base/bsp/src/bsp_can.c ****                 if (g_can2_can_instances[i]->rx_id == rx_header.StdId)
 145:control-base/bsp/src/bsp_can.c ****                 {
 146:control-base/bsp/src/bsp_can.c ****                     // move the received data to the rx buffer in the can instance
 147:control-base/bsp/src/bsp_can.c ****                     memmove(g_can2_can_instances[i]->rx_buffer, can_rx_buff, 8);
 148:control-base/bsp/src/bsp_can.c ****                     g_can2_can_instances[i]->can_module_callback(g_can2_can_instances[i]);
 149:control-base/bsp/src/bsp_can.c ****                     break;
 150:control-base/bsp/src/bsp_can.c ****                 }
 151:control-base/bsp/src/bsp_can.c ****             }
 152:control-base/bsp/src/bsp_can.c ****             break;
 153:control-base/bsp/src/bsp_can.c ****         default:
 154:control-base/bsp/src/bsp_can.c ****         // TODO: LOG can bus need to be 1 or 2
 155:control-base/bsp/src/bsp_can.c ****             break;
 156:control-base/bsp/src/bsp_can.c ****         }
 157:control-base/bsp/src/bsp_can.c ****     }
 158:control-base/bsp/src/bsp_can.c **** }
 442              		.loc 1 158 1 view .LVU111
 443 0026 02B0     		add	sp, sp, #8
 444              	.LCFI9:
 445              		.cfi_remember_state
 446              		.cfi_def_cfa_offset 8
 447              		@ sp needed
 448 0028 10BD     		pop	{r4, pc}
 449              	.LVL28:
 450              	.L41:
 451              	.LCFI10:
 452              		.cfi_restore_state
 453              	.LBB5:
 124:control-base/bsp/src/bsp_can.c ****         switch (can_bus)
 454              		.loc 1 124 17 discriminator 1 view .LVU112
 455 002a 0122     		movs	r2, #1
 456 002c F7E7     		b	.L32
 457              	.LVL29:
 458              	.L42:
 459              	.LBB3:
 134:control-base/bsp/src/bsp_can.c ****                     g_can1_can_instances[i]->can_module_callback(g_can1_can_instances[i]);
 460              		.loc 1 134 21 is_stmt 1 view .LVU113
 461 002e 6C46     		mov	r4, sp
 462              	.LVL30:
 134:control-base/bsp/src/bsp_can.c ****                     g_can1_can_instances[i]->can_module_callback(g_can1_can_instances[i]);
 463              		.loc 1 134 21 is_stmt 0 view .LVU114
 464 0030 03CC     		ldmia	r4!, {r0, r1}
 465 0032 C2F81200 		str	r0, [r2, #18]	@ unaligned
 466 0036 C2F81610 		str	r1, [r2, #22]	@ unaligned
 135:control-base/bsp/src/bsp_can.c ****                     break;
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 12


 467              		.loc 1 135 21 is_stmt 1 view .LVU115
 135:control-base/bsp/src/bsp_can.c ****                     break;
 468              		.loc 1 135 41 is_stmt 0 view .LVU116
 469 003a 1A4A     		ldr	r2, .L44+8
 470 003c 52F82300 		ldr	r0, [r2, r3, lsl #2]
 135:control-base/bsp/src/bsp_can.c ****                     break;
 471              		.loc 1 135 44 view .LVU117
 472 0040 C369     		ldr	r3, [r0, #28]
 473              	.LVL31:
 135:control-base/bsp/src/bsp_can.c ****                     break;
 474              		.loc 1 135 21 view .LVU118
 475 0042 9847     		blx	r3
 476              	.LVL32:
 136:control-base/bsp/src/bsp_can.c ****                 }
 477              		.loc 1 136 21 is_stmt 1 view .LVU119
 478 0044 EFE7     		b	.L30
 479              	.LVL33:
 480              	.L33:
 129:control-base/bsp/src/bsp_can.c ****             {
 481              		.loc 1 129 35 discriminator 1 view .LVU120
 482 0046 184A     		ldr	r2, .L44+12
 483 0048 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 484 004a 9A42     		cmp	r2, r3
 485 004c EBD9     		bls	.L30
 131:control-base/bsp/src/bsp_can.c ****                 {
 486              		.loc 1 131 17 view .LVU121
 131:control-base/bsp/src/bsp_can.c ****                 {
 487              		.loc 1 131 41 is_stmt 0 view .LVU122
 488 004e 154A     		ldr	r2, .L44+8
 489 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 131:control-base/bsp/src/bsp_can.c ****                 {
 490              		.loc 1 131 44 view .LVU123
 491 0054 1089     		ldrh	r0, [r2, #8]
 131:control-base/bsp/src/bsp_can.c ****                 {
 492              		.loc 1 131 64 view .LVU124
 493 0056 1149     		ldr	r1, .L44
 494 0058 0968     		ldr	r1, [r1]
 131:control-base/bsp/src/bsp_can.c ****                 {
 495              		.loc 1 131 20 view .LVU125
 496 005a 8842     		cmp	r0, r1
 497 005c E7D0     		beq	.L42
 129:control-base/bsp/src/bsp_can.c ****             {
 498              		.loc 1 129 59 is_stmt 1 discriminator 2 view .LVU126
 499 005e 0133     		adds	r3, r3, #1
 500              	.LVL34:
 129:control-base/bsp/src/bsp_can.c ****             {
 501              		.loc 1 129 59 is_stmt 0 discriminator 2 view .LVU127
 502 0060 DBB2     		uxtb	r3, r3
 503              	.LVL35:
 129:control-base/bsp/src/bsp_can.c ****             {
 504              		.loc 1 129 59 discriminator 2 view .LVU128
 505 0062 F0E7     		b	.L33
 506              	.LVL36:
 507              	.L43:
 129:control-base/bsp/src/bsp_can.c ****             {
 508              		.loc 1 129 59 discriminator 2 view .LVU129
 509              	.LBE3:
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 13


 510              	.LBB4:
 147:control-base/bsp/src/bsp_can.c ****                     g_can2_can_instances[i]->can_module_callback(g_can2_can_instances[i]);
 511              		.loc 1 147 21 is_stmt 1 view .LVU130
 512 0064 6C46     		mov	r4, sp
 513              	.LVL37:
 147:control-base/bsp/src/bsp_can.c ****                     g_can2_can_instances[i]->can_module_callback(g_can2_can_instances[i]);
 514              		.loc 1 147 21 is_stmt 0 view .LVU131
 515 0066 03CC     		ldmia	r4!, {r0, r1}
 516 0068 C2F81200 		str	r0, [r2, #18]	@ unaligned
 517 006c C2F81610 		str	r1, [r2, #22]	@ unaligned
 148:control-base/bsp/src/bsp_can.c ****                     break;
 518              		.loc 1 148 21 is_stmt 1 view .LVU132
 148:control-base/bsp/src/bsp_can.c ****                     break;
 519              		.loc 1 148 41 is_stmt 0 view .LVU133
 520 0070 0E4A     		ldr	r2, .L44+16
 521 0072 52F82300 		ldr	r0, [r2, r3, lsl #2]
 148:control-base/bsp/src/bsp_can.c ****                     break;
 522              		.loc 1 148 44 view .LVU134
 523 0076 C369     		ldr	r3, [r0, #28]
 524              	.LVL38:
 148:control-base/bsp/src/bsp_can.c ****                     break;
 525              		.loc 1 148 21 view .LVU135
 526 0078 9847     		blx	r3
 527              	.LVL39:
 149:control-base/bsp/src/bsp_can.c ****                 }
 528              		.loc 1 149 21 is_stmt 1 view .LVU136
 529 007a D4E7     		b	.L30
 530              	.LVL40:
 531              	.L34:
 142:control-base/bsp/src/bsp_can.c ****             {
 532              		.loc 1 142 35 discriminator 1 view .LVU137
 533 007c 0C4A     		ldr	r2, .L44+20
 534 007e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 535 0080 9A42     		cmp	r2, r3
 536 0082 D0D9     		bls	.L30
 144:control-base/bsp/src/bsp_can.c ****                 {
 537              		.loc 1 144 17 view .LVU138
 144:control-base/bsp/src/bsp_can.c ****                 {
 538              		.loc 1 144 41 is_stmt 0 view .LVU139
 539 0084 094A     		ldr	r2, .L44+16
 540 0086 52F82320 		ldr	r2, [r2, r3, lsl #2]
 144:control-base/bsp/src/bsp_can.c ****                 {
 541              		.loc 1 144 44 view .LVU140
 542 008a 1089     		ldrh	r0, [r2, #8]
 144:control-base/bsp/src/bsp_can.c ****                 {
 543              		.loc 1 144 64 view .LVU141
 544 008c 0349     		ldr	r1, .L44
 545 008e 0968     		ldr	r1, [r1]
 144:control-base/bsp/src/bsp_can.c ****                 {
 546              		.loc 1 144 20 view .LVU142
 547 0090 8842     		cmp	r0, r1
 548 0092 E7D0     		beq	.L43
 142:control-base/bsp/src/bsp_can.c ****             {
 549              		.loc 1 142 59 is_stmt 1 discriminator 2 view .LVU143
 550 0094 0133     		adds	r3, r3, #1
 551              	.LVL41:
 142:control-base/bsp/src/bsp_can.c ****             {
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 14


 552              		.loc 1 142 59 is_stmt 0 discriminator 2 view .LVU144
 553 0096 DBB2     		uxtb	r3, r3
 554              	.LVL42:
 142:control-base/bsp/src/bsp_can.c ****             {
 555              		.loc 1 142 59 discriminator 2 view .LVU145
 556 0098 F0E7     		b	.L34
 557              	.L45:
 558 009a 00BF     		.align	2
 559              	.L44:
 560 009c 00000000 		.word	rx_header.0
 561 00a0 00000000 		.word	hcan1
 562 00a4 00000000 		.word	g_can1_can_instances
 563 00a8 00000000 		.word	g_can1_device_count
 564 00ac 00000000 		.word	g_can2_can_instances
 565 00b0 00000000 		.word	g_can2_device_count
 566              	.LBE4:
 567              	.LBE5:
 568              		.cfi_endproc
 569              	.LFE146:
 571              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 572              		.align	1
 573              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	HAL_CAN_RxFifo0MsgPendingCallback:
 579              	.LVL43:
 580              	.LFB147:
 159:control-base/bsp/src/bsp_can.c **** 
 160:control-base/bsp/src/bsp_can.c **** /**
 161:control-base/bsp/src/bsp_can.c ****  * @brief  CAN FIFO0 Receive Callback. This function is called when a message 
 162:control-base/bsp/src/bsp_can.c ****  * is received in FIFO0. For better abstraction, user defined CAN_Rx_Callback()
 163:control-base/bsp/src/bsp_can.c ****  * is called to decode the message with the function pointer binded with each
 164:control-base/bsp/src/bsp_can.c ****  * can instance
 165:control-base/bsp/src/bsp_can.c ****  * 
 166:control-base/bsp/src/bsp_can.c ****  * this function overrides the weak implementation in stm32f4xx_hal_can.c
 167:control-base/bsp/src/bsp_can.c **** */
 168:control-base/bsp/src/bsp_can.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
 169:control-base/bsp/src/bsp_can.c **** {
 581              		.loc 1 169 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		.loc 1 169 1 is_stmt 0 view .LVU147
 586 0000 08B5     		push	{r3, lr}
 587              	.LCFI11:
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 3, -8
 590              		.cfi_offset 14, -4
 170:control-base/bsp/src/bsp_can.c ****     CAN_Rx_Callback(hcan, CAN_RX_FIFO0);
 591              		.loc 1 170 5 is_stmt 1 view .LVU148
 592 0002 0021     		movs	r1, #0
 593 0004 FFF7FEFF 		bl	CAN_Rx_Callback
 594              	.LVL44:
 171:control-base/bsp/src/bsp_can.c **** }
 595              		.loc 1 171 1 is_stmt 0 view .LVU149
 596 0008 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 15


 597              		.cfi_endproc
 598              	.LFE147:
 600              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 601              		.align	1
 602              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 603              		.syntax unified
 604              		.thumb
 605              		.thumb_func
 607              	HAL_CAN_RxFifo1MsgPendingCallback:
 608              	.LVL45:
 609              	.LFB148:
 172:control-base/bsp/src/bsp_can.c **** 
 173:control-base/bsp/src/bsp_can.c **** /**
 174:control-base/bsp/src/bsp_can.c ****  * @brief  CAN FIFO1 Receive Callback. This function is called when a message
 175:control-base/bsp/src/bsp_can.c ****  * is received in FIFO1. For better abstraction, user defined CAN_Rx_Callback()
 176:control-base/bsp/src/bsp_can.c ****  * is called to decode the message with the function pointer binded with each
 177:control-base/bsp/src/bsp_can.c ****  * can instance
 178:control-base/bsp/src/bsp_can.c ****  * 
 179:control-base/bsp/src/bsp_can.c ****  * this function overrides the weak implementation in stm32f4xx_hal_can.c
 180:control-base/bsp/src/bsp_can.c **** */
 181:control-base/bsp/src/bsp_can.c **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
 182:control-base/bsp/src/bsp_can.c **** {
 610              		.loc 1 182 1 is_stmt 1 view -0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		.loc 1 182 1 is_stmt 0 view .LVU151
 615 0000 08B5     		push	{r3, lr}
 616              	.LCFI12:
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 3, -8
 619              		.cfi_offset 14, -4
 183:control-base/bsp/src/bsp_can.c ****     CAN_Rx_Callback(hcan, CAN_RX_FIFO1);
 620              		.loc 1 183 5 is_stmt 1 view .LVU152
 621 0002 0121     		movs	r1, #1
 622 0004 FFF7FEFF 		bl	CAN_Rx_Callback
 623              	.LVL46:
 184:control-base/bsp/src/bsp_can.c **** }
 624              		.loc 1 184 1 is_stmt 0 view .LVU153
 625 0008 08BD     		pop	{r3, pc}
 626              		.cfi_endproc
 627              	.LFE148:
 629              		.section	.bss.rx_header.0,"aw",%nobits
 630              		.align	2
 633              	rx_header.0:
 634 0000 00000000 		.space	28
 634      00000000 
 634      00000000 
 634      00000000 
 634      00000000 
 635              		.section	.data.can2_filter_count.1,"aw"
 638              	can2_filter_count.1:
 639 0000 0E       		.byte	14
 640              		.section	.bss.can1_filter_count.2,"aw",%nobits
 643              	can1_filter_count.2:
 644 0000 00       		.space	1
 645              		.global	g_can_data
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 16


 646              		.section	.bss.g_can_data,"aw",%nobits
 647              		.align	2
 650              	g_can_data:
 651 0000 00000000 		.space	8
 651      00000000 
 652              		.global	g_rx_header
 653              		.section	.bss.g_rx_header,"aw",%nobits
 654              		.align	2
 657              	g_rx_header:
 658 0000 00000000 		.space	28
 658      00000000 
 658      00000000 
 658      00000000 
 658      00000000 
 659              		.section	.bss.g_can2_device_count,"aw",%nobits
 662              	g_can2_device_count:
 663 0000 00       		.space	1
 664              		.section	.bss.g_can2_can_instances,"aw",%nobits
 665              		.align	2
 668              	g_can2_can_instances:
 669 0000 00000000 		.space	32
 669      00000000 
 669      00000000 
 669      00000000 
 669      00000000 
 670              		.section	.bss.g_can1_device_count,"aw",%nobits
 673              	g_can1_device_count:
 674 0000 00       		.space	1
 675              		.section	.bss.g_can1_can_instances,"aw",%nobits
 676              		.align	2
 679              	g_can1_can_instances:
 680 0000 00000000 		.space	32
 680      00000000 
 680      00000000 
 680      00000000 
 680      00000000 
 681              		.text
 682              	.Letext0:
 683              		.file 2 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 684              		.file 3 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 685              		.file 4 "control-base/typec-board-base/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 686              		.file 5 "control-base/typec-board-base/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 687              		.file 6 "control-base/typec-board-base/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 688              		.file 7 "control-base/typec-board-base/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 689              		.file 8 "control-base/typec-board-base/Core/Inc/can.h"
 690              		.file 9 "control-base/bsp/inc/bsp_can.h"
 691              		.file 10 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/stdlib.h"
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_can.c
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:21     .text.CAN_Filter_Init:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:27     .text.CAN_Filter_Init:00000000 CAN_Filter_Init
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:134    .text.CAN_Filter_Init:00000058 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:638    .data.can2_filter_count.1:00000000 can2_filter_count.1
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:643    .bss.can1_filter_count.2:00000000 can1_filter_count.2
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:142    .text.CAN_Device_Register:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:148    .text.CAN_Device_Register:00000000 CAN_Device_Register
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:252    .text.CAN_Device_Register:00000064 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:662    .bss.g_can2_device_count:00000000 g_can2_device_count
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:668    .bss.g_can2_can_instances:00000000 g_can2_can_instances
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:673    .bss.g_can1_device_count:00000000 g_can1_device_count
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:679    .bss.g_can1_can_instances:00000000 g_can1_can_instances
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:260    .text.CAN_Service_Init:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:266    .text.CAN_Service_Init:00000000 CAN_Service_Init
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:314    .text.CAN_Service_Init:00000034 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:320    .text.CAN_Transmit:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:326    .text.CAN_Transmit:00000000 CAN_Transmit
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:379    .text.CAN_Transmit:0000002c $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:385    .text.CAN_Rx_Callback:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:391    .text.CAN_Rx_Callback:00000000 CAN_Rx_Callback
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:560    .text.CAN_Rx_Callback:0000009c $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:633    .bss.rx_header.0:00000000 rx_header.0
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:572    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:578    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:601    .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:607    .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:630    .bss.rx_header.0:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:644    .bss.can1_filter_count.2:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:650    .bss.g_can_data:00000000 g_can_data
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:647    .bss.g_can_data:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:657    .bss.g_rx_header:00000000 g_rx_header
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:654    .bss.g_rx_header:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:663    .bss.g_can2_device_count:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:665    .bss.g_can2_can_instances:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:674    .bss.g_can1_device_count:00000000 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cc3S6ild.s:676    .bss.g_can1_can_instances:00000000 $d

UNDEFINED SYMBOLS
HAL_CAN_ConfigFilter
hcan2
hcan1
malloc
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_CAN_GetTxMailboxesFreeLevel
HAL_CAN_AddTxMessage
HAL_CAN_GetRxMessage
