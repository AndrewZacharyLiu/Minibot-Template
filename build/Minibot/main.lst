ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "control-base/typec-board-base/Core/Src/main.c"
  20              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_TIM_PeriodElapsedCallback
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_TIM_PeriodElapsedCallback:
  28              	.LVL0:
  29              	.LFB141:
   1:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:control-base/typec-board-base/Core/Src/main.c **** /**
   3:control-base/typec-board-base/Core/Src/main.c ****   ******************************************************************************
   4:control-base/typec-board-base/Core/Src/main.c ****   * @file           : main.c
   5:control-base/typec-board-base/Core/Src/main.c ****   * @brief          : Main program body
   6:control-base/typec-board-base/Core/Src/main.c ****   ******************************************************************************
   7:control-base/typec-board-base/Core/Src/main.c ****   * @attention
   8:control-base/typec-board-base/Core/Src/main.c ****   *
   9:control-base/typec-board-base/Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:control-base/typec-board-base/Core/Src/main.c ****   * All rights reserved.
  11:control-base/typec-board-base/Core/Src/main.c ****   *
  12:control-base/typec-board-base/Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:control-base/typec-board-base/Core/Src/main.c ****   * in the root directory of this software component.
  14:control-base/typec-board-base/Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:control-base/typec-board-base/Core/Src/main.c ****   *
  16:control-base/typec-board-base/Core/Src/main.c ****   ******************************************************************************
  17:control-base/typec-board-base/Core/Src/main.c ****   */
  18:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END Header */
  19:control-base/typec-board-base/Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:control-base/typec-board-base/Core/Src/main.c **** #include "main.h"
  21:control-base/typec-board-base/Core/Src/main.c **** #include "cmsis_os.h"
  22:control-base/typec-board-base/Core/Src/main.c **** #include "can.h"
  23:control-base/typec-board-base/Core/Src/main.c **** #include "dma.h"
  24:control-base/typec-board-base/Core/Src/main.c **** #include "i2c.h"
  25:control-base/typec-board-base/Core/Src/main.c **** #include "spi.h"
  26:control-base/typec-board-base/Core/Src/main.c **** #include "tim.h"
  27:control-base/typec-board-base/Core/Src/main.c **** #include "usart.h"
  28:control-base/typec-board-base/Core/Src/main.c **** #include "gpio.h"
  29:control-base/typec-board-base/Core/Src/main.c **** 
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 2


  30:control-base/typec-board-base/Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  31:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN Includes */
  32:control-base/typec-board-base/Core/Src/main.c **** #include "robot.h"
  33:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END Includes */
  34:control-base/typec-board-base/Core/Src/main.c **** 
  35:control-base/typec-board-base/Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:control-base/typec-board-base/Core/Src/main.c **** 
  38:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END PTD */
  39:control-base/typec-board-base/Core/Src/main.c **** 
  40:control-base/typec-board-base/Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:control-base/typec-board-base/Core/Src/main.c **** 
  43:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END PD */
  44:control-base/typec-board-base/Core/Src/main.c **** 
  45:control-base/typec-board-base/Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:control-base/typec-board-base/Core/Src/main.c **** 
  48:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END PM */
  49:control-base/typec-board-base/Core/Src/main.c **** 
  50:control-base/typec-board-base/Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:control-base/typec-board-base/Core/Src/main.c **** 
  52:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:control-base/typec-board-base/Core/Src/main.c **** 
  54:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END PV */
  55:control-base/typec-board-base/Core/Src/main.c **** 
  56:control-base/typec-board-base/Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:control-base/typec-board-base/Core/Src/main.c **** void SystemClock_Config(void);
  58:control-base/typec-board-base/Core/Src/main.c **** void MX_FREERTOS_Init(void);
  59:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:control-base/typec-board-base/Core/Src/main.c **** 
  61:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END PFP */
  62:control-base/typec-board-base/Core/Src/main.c **** 
  63:control-base/typec-board-base/Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:control-base/typec-board-base/Core/Src/main.c **** 
  66:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END 0 */
  67:control-base/typec-board-base/Core/Src/main.c **** 
  68:control-base/typec-board-base/Core/Src/main.c **** /**
  69:control-base/typec-board-base/Core/Src/main.c ****   * @brief  The application entry point.
  70:control-base/typec-board-base/Core/Src/main.c ****   * @retval int
  71:control-base/typec-board-base/Core/Src/main.c ****   */
  72:control-base/typec-board-base/Core/Src/main.c **** int main(void)
  73:control-base/typec-board-base/Core/Src/main.c **** {
  74:control-base/typec-board-base/Core/Src/main.c **** 
  75:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:control-base/typec-board-base/Core/Src/main.c **** 
  77:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END 1 */
  78:control-base/typec-board-base/Core/Src/main.c **** 
  79:control-base/typec-board-base/Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:control-base/typec-board-base/Core/Src/main.c **** 
  81:control-base/typec-board-base/Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:control-base/typec-board-base/Core/Src/main.c ****   HAL_Init();
  83:control-base/typec-board-base/Core/Src/main.c **** 
  84:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:control-base/typec-board-base/Core/Src/main.c **** 
  86:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 3


  87:control-base/typec-board-base/Core/Src/main.c **** 
  88:control-base/typec-board-base/Core/Src/main.c ****   /* Configure the system clock */
  89:control-base/typec-board-base/Core/Src/main.c ****   SystemClock_Config();
  90:control-base/typec-board-base/Core/Src/main.c **** 
  91:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:control-base/typec-board-base/Core/Src/main.c **** 
  93:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END SysInit */
  94:control-base/typec-board-base/Core/Src/main.c **** 
  95:control-base/typec-board-base/Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:control-base/typec-board-base/Core/Src/main.c ****   MX_GPIO_Init();
  97:control-base/typec-board-base/Core/Src/main.c ****   MX_DMA_Init();
  98:control-base/typec-board-base/Core/Src/main.c ****   MX_USART3_UART_Init();
  99:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM1_Init();
 100:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM8_Init();
 101:control-base/typec-board-base/Core/Src/main.c ****   MX_SPI1_Init();
 102:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM10_Init();
 103:control-base/typec-board-base/Core/Src/main.c ****   MX_I2C3_Init();
 104:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM5_Init();
 105:control-base/typec-board-base/Core/Src/main.c ****   MX_CAN1_Init();
 106:control-base/typec-board-base/Core/Src/main.c ****   MX_CAN2_Init();
 107:control-base/typec-board-base/Core/Src/main.c ****   MX_USART6_UART_Init();
 108:control-base/typec-board-base/Core/Src/main.c ****   MX_USART1_UART_Init();
 109:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM4_Init();
 110:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM3_Init();
 111:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 112:control-base/typec-board-base/Core/Src/main.c ****   Robot_Init();
 113:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END 2 */
 114:control-base/typec-board-base/Core/Src/main.c **** 
 115:control-base/typec-board-base/Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 116:control-base/typec-board-base/Core/Src/main.c ****   MX_FREERTOS_Init();
 117:control-base/typec-board-base/Core/Src/main.c **** 
 118:control-base/typec-board-base/Core/Src/main.c ****   /* Start scheduler */
 119:control-base/typec-board-base/Core/Src/main.c ****   osKernelStart();
 120:control-base/typec-board-base/Core/Src/main.c **** 
 121:control-base/typec-board-base/Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 122:control-base/typec-board-base/Core/Src/main.c **** 
 123:control-base/typec-board-base/Core/Src/main.c ****   /* Infinite loop */
 124:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 125:control-base/typec-board-base/Core/Src/main.c ****   while (1)
 126:control-base/typec-board-base/Core/Src/main.c ****   {
 127:control-base/typec-board-base/Core/Src/main.c ****     /* USER CODE END WHILE */
 128:control-base/typec-board-base/Core/Src/main.c **** 
 129:control-base/typec-board-base/Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 130:control-base/typec-board-base/Core/Src/main.c ****   }
 131:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END 3 */
 132:control-base/typec-board-base/Core/Src/main.c **** }
 133:control-base/typec-board-base/Core/Src/main.c **** 
 134:control-base/typec-board-base/Core/Src/main.c **** /**
 135:control-base/typec-board-base/Core/Src/main.c ****   * @brief System Clock Configuration
 136:control-base/typec-board-base/Core/Src/main.c ****   * @retval None
 137:control-base/typec-board-base/Core/Src/main.c ****   */
 138:control-base/typec-board-base/Core/Src/main.c **** void SystemClock_Config(void)
 139:control-base/typec-board-base/Core/Src/main.c **** {
 140:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:control-base/typec-board-base/Core/Src/main.c **** 
 143:control-base/typec-board-base/Core/Src/main.c ****   /** Configure the main internal regulator output voltage
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 4


 144:control-base/typec-board-base/Core/Src/main.c ****   */
 145:control-base/typec-board-base/Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 146:control-base/typec-board-base/Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 147:control-base/typec-board-base/Core/Src/main.c **** 
 148:control-base/typec-board-base/Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 149:control-base/typec-board-base/Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 150:control-base/typec-board-base/Core/Src/main.c ****   */
 151:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 152:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 153:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 154:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 155:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 156:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 157:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 158:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 159:control-base/typec-board-base/Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 160:control-base/typec-board-base/Core/Src/main.c ****   {
 161:control-base/typec-board-base/Core/Src/main.c ****     Error_Handler();
 162:control-base/typec-board-base/Core/Src/main.c ****   }
 163:control-base/typec-board-base/Core/Src/main.c **** 
 164:control-base/typec-board-base/Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 165:control-base/typec-board-base/Core/Src/main.c ****   */
 166:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 167:control-base/typec-board-base/Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 169:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 171:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 172:control-base/typec-board-base/Core/Src/main.c **** 
 173:control-base/typec-board-base/Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 174:control-base/typec-board-base/Core/Src/main.c ****   {
 175:control-base/typec-board-base/Core/Src/main.c ****     Error_Handler();
 176:control-base/typec-board-base/Core/Src/main.c ****   }
 177:control-base/typec-board-base/Core/Src/main.c **** }
 178:control-base/typec-board-base/Core/Src/main.c **** 
 179:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE BEGIN 4 */
 180:control-base/typec-board-base/Core/Src/main.c **** /* USER CODE END 4 */
 181:control-base/typec-board-base/Core/Src/main.c **** 
 182:control-base/typec-board-base/Core/Src/main.c **** /**
 183:control-base/typec-board-base/Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 184:control-base/typec-board-base/Core/Src/main.c ****   * @note   This function is called  when TIM2 interrupt took place, inside
 185:control-base/typec-board-base/Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 186:control-base/typec-board-base/Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 187:control-base/typec-board-base/Core/Src/main.c ****   * @param  htim : TIM handle
 188:control-base/typec-board-base/Core/Src/main.c ****   * @retval None
 189:control-base/typec-board-base/Core/Src/main.c ****   */
 190:control-base/typec-board-base/Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 191:control-base/typec-board-base/Core/Src/main.c **** {
  30              		.loc 1 191 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 191 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 5


  39              		.cfi_offset 14, -4
 192:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 193:control-base/typec-board-base/Core/Src/main.c **** 
 194:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END Callback 0 */
 195:control-base/typec-board-base/Core/Src/main.c ****   if (htim->Instance == TIM2) {
  40              		.loc 1 195 3 is_stmt 1 view .LVU2
  41              		.loc 1 195 11 is_stmt 0 view .LVU3
  42 0002 0368     		ldr	r3, [r0]
  43              		.loc 1 195 6 view .LVU4
  44 0004 B3F1804F 		cmp	r3, #1073741824
  45 0008 00D0     		beq	.L4
  46              	.LVL1:
  47              	.L1:
 196:control-base/typec-board-base/Core/Src/main.c ****     HAL_IncTick();
 197:control-base/typec-board-base/Core/Src/main.c ****   }
 198:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 199:control-base/typec-board-base/Core/Src/main.c **** 
 200:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END Callback 1 */
 201:control-base/typec-board-base/Core/Src/main.c **** }
  48              		.loc 1 201 1 view .LVU5
  49 000a 08BD     		pop	{r3, pc}
  50              	.LVL2:
  51              	.L4:
 196:control-base/typec-board-base/Core/Src/main.c ****     HAL_IncTick();
  52              		.loc 1 196 5 is_stmt 1 view .LVU6
  53 000c FFF7FEFF 		bl	HAL_IncTick
  54              	.LVL3:
  55              		.loc 1 201 1 is_stmt 0 view .LVU7
  56 0010 FBE7     		b	.L1
  57              		.cfi_endproc
  58              	.LFE141:
  60              		.section	.text.Error_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	Error_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	Error_Handler:
  68              	.LFB142:
 202:control-base/typec-board-base/Core/Src/main.c **** 
 203:control-base/typec-board-base/Core/Src/main.c **** /**
 204:control-base/typec-board-base/Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 205:control-base/typec-board-base/Core/Src/main.c ****   * @retval None
 206:control-base/typec-board-base/Core/Src/main.c ****   */
 207:control-base/typec-board-base/Core/Src/main.c **** void Error_Handler(void)
 208:control-base/typec-board-base/Core/Src/main.c **** {
  69              		.loc 1 208 1 is_stmt 1 view -0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 209:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 210:control-base/typec-board-base/Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 211:control-base/typec-board-base/Core/Src/main.c ****   __disable_irq();
  75              		.loc 1 211 3 view .LVU9
  76              	.LBB4:
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 6


  77              	.LBI4:
  78              		.file 2 "control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 7


  56:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 8


 113:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 9


 170:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 10


 227:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 11


 284:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 12


 341:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 13


 398:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 14


 455:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 15


 512:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 16


 569:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 17


 626:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 18


 683:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 19


 740:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 20


 797:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 21


 854:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 22


 911:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  79              		.loc 2 960 27 view .LVU10
  80              	.LBB5:
 961:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  81              		.loc 2 962 3 view .LVU11
  82              		.syntax unified
  83              	@ 962 "control-base/typec-board-base/Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 23


  84 0000 72B6     		cpsid i
  85              	@ 0 "" 2
  86              		.thumb
  87              		.syntax unified
  88              	.L6:
  89              	.LBE5:
  90              	.LBE4:
 212:control-base/typec-board-base/Core/Src/main.c ****   while (1)
  91              		.loc 1 212 3 view .LVU12
 213:control-base/typec-board-base/Core/Src/main.c ****   {
 214:control-base/typec-board-base/Core/Src/main.c ****     __asm__("nop");
  92              		.loc 1 214 5 discriminator 1 view .LVU13
  93              		.syntax unified
  94              	@ 214 "control-base/typec-board-base/Core/Src/main.c" 1
  95 0002 00BF     		nop
  96              	@ 0 "" 2
 212:control-base/typec-board-base/Core/Src/main.c ****   while (1)
  97              		.loc 1 212 9 view .LVU14
  98              		.thumb
  99              		.syntax unified
 100 0004 FDE7     		b	.L6
 101              		.cfi_endproc
 102              	.LFE142:
 104              		.section	.text.SystemClock_Config,"ax",%progbits
 105              		.align	1
 106              		.global	SystemClock_Config
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	SystemClock_Config:
 112              	.LFB140:
 139:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113              		.loc 1 139 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 80
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              	.LCFI1:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 122 0002 94B0     		sub	sp, sp, #80
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 88
 140:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125              		.loc 1 140 3 view .LVU16
 140:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 126              		.loc 1 140 22 is_stmt 0 view .LVU17
 127 0004 08AC     		add	r4, sp, #32
 128 0006 3022     		movs	r2, #48
 129 0008 0021     		movs	r1, #0
 130 000a 2046     		mov	r0, r4
 131 000c FFF7FEFF 		bl	memset
 132              	.LVL4:
 141:control-base/typec-board-base/Core/Src/main.c **** 
 133              		.loc 1 141 3 is_stmt 1 view .LVU18
 141:control-base/typec-board-base/Core/Src/main.c **** 
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 24


 134              		.loc 1 141 22 is_stmt 0 view .LVU19
 135 0010 0023     		movs	r3, #0
 136 0012 0393     		str	r3, [sp, #12]
 137 0014 0493     		str	r3, [sp, #16]
 138 0016 0593     		str	r3, [sp, #20]
 139 0018 0693     		str	r3, [sp, #24]
 140 001a 0793     		str	r3, [sp, #28]
 145:control-base/typec-board-base/Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 141              		.loc 1 145 3 is_stmt 1 view .LVU20
 142              	.LBB6:
 145:control-base/typec-board-base/Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 143              		.loc 1 145 3 view .LVU21
 144 001c 0193     		str	r3, [sp, #4]
 145:control-base/typec-board-base/Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 145              		.loc 1 145 3 view .LVU22
 146 001e 204A     		ldr	r2, .L13
 147 0020 116C     		ldr	r1, [r2, #64]
 148 0022 41F08051 		orr	r1, r1, #268435456
 149 0026 1164     		str	r1, [r2, #64]
 145:control-base/typec-board-base/Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 150              		.loc 1 145 3 view .LVU23
 151 0028 126C     		ldr	r2, [r2, #64]
 152 002a 02F08052 		and	r2, r2, #268435456
 153 002e 0192     		str	r2, [sp, #4]
 145:control-base/typec-board-base/Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 154              		.loc 1 145 3 view .LVU24
 155 0030 019A     		ldr	r2, [sp, #4]
 156              	.LBE6:
 145:control-base/typec-board-base/Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 157              		.loc 1 145 3 view .LVU25
 146:control-base/typec-board-base/Core/Src/main.c **** 
 158              		.loc 1 146 3 view .LVU26
 159              	.LBB7:
 146:control-base/typec-board-base/Core/Src/main.c **** 
 160              		.loc 1 146 3 view .LVU27
 161 0032 0293     		str	r3, [sp, #8]
 146:control-base/typec-board-base/Core/Src/main.c **** 
 162              		.loc 1 146 3 view .LVU28
 163 0034 1B4B     		ldr	r3, .L13+4
 164 0036 1A68     		ldr	r2, [r3]
 165 0038 42F48042 		orr	r2, r2, #16384
 166 003c 1A60     		str	r2, [r3]
 146:control-base/typec-board-base/Core/Src/main.c **** 
 167              		.loc 1 146 3 view .LVU29
 168 003e 1B68     		ldr	r3, [r3]
 169 0040 03F48043 		and	r3, r3, #16384
 170 0044 0293     		str	r3, [sp, #8]
 146:control-base/typec-board-base/Core/Src/main.c **** 
 171              		.loc 1 146 3 view .LVU30
 172 0046 029B     		ldr	r3, [sp, #8]
 173              	.LBE7:
 146:control-base/typec-board-base/Core/Src/main.c **** 
 174              		.loc 1 146 3 view .LVU31
 151:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 175              		.loc 1 151 3 view .LVU32
 151:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 176              		.loc 1 151 36 is_stmt 0 view .LVU33
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 25


 177 0048 0123     		movs	r3, #1
 178 004a 0893     		str	r3, [sp, #32]
 152:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 179              		.loc 1 152 3 is_stmt 1 view .LVU34
 152:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 180              		.loc 1 152 30 is_stmt 0 view .LVU35
 181 004c 4FF48033 		mov	r3, #65536
 182 0050 0993     		str	r3, [sp, #36]
 153:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 183              		.loc 1 153 3 is_stmt 1 view .LVU36
 153:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 184              		.loc 1 153 34 is_stmt 0 view .LVU37
 185 0052 0223     		movs	r3, #2
 186 0054 0E93     		str	r3, [sp, #56]
 154:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 187              		.loc 1 154 3 is_stmt 1 view .LVU38
 154:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 6;
 188              		.loc 1 154 35 is_stmt 0 view .LVU39
 189 0056 4FF48002 		mov	r2, #4194304
 190 005a 0F92     		str	r2, [sp, #60]
 155:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 191              		.loc 1 155 3 is_stmt 1 view .LVU40
 155:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 192              		.loc 1 155 30 is_stmt 0 view .LVU41
 193 005c 0622     		movs	r2, #6
 194 005e 1092     		str	r2, [sp, #64]
 156:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 195              		.loc 1 156 3 is_stmt 1 view .LVU42
 156:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 196              		.loc 1 156 30 is_stmt 0 view .LVU43
 197 0060 A822     		movs	r2, #168
 198 0062 1192     		str	r2, [sp, #68]
 157:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 199              		.loc 1 157 3 is_stmt 1 view .LVU44
 157:control-base/typec-board-base/Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 200              		.loc 1 157 30 is_stmt 0 view .LVU45
 201 0064 1293     		str	r3, [sp, #72]
 158:control-base/typec-board-base/Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 202              		.loc 1 158 3 is_stmt 1 view .LVU46
 158:control-base/typec-board-base/Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 203              		.loc 1 158 30 is_stmt 0 view .LVU47
 204 0066 0423     		movs	r3, #4
 205 0068 1393     		str	r3, [sp, #76]
 159:control-base/typec-board-base/Core/Src/main.c ****   {
 206              		.loc 1 159 3 is_stmt 1 view .LVU48
 159:control-base/typec-board-base/Core/Src/main.c ****   {
 207              		.loc 1 159 7 is_stmt 0 view .LVU49
 208 006a 2046     		mov	r0, r4
 209 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 210              	.LVL5:
 159:control-base/typec-board-base/Core/Src/main.c ****   {
 211              		.loc 1 159 6 discriminator 1 view .LVU50
 212 0070 90B9     		cbnz	r0, .L11
 166:control-base/typec-board-base/Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 213              		.loc 1 166 3 is_stmt 1 view .LVU51
 166:control-base/typec-board-base/Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 214              		.loc 1 166 31 is_stmt 0 view .LVU52
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 26


 215 0072 0F23     		movs	r3, #15
 216 0074 0393     		str	r3, [sp, #12]
 168:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 217              		.loc 1 168 3 is_stmt 1 view .LVU53
 168:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 218              		.loc 1 168 34 is_stmt 0 view .LVU54
 219 0076 0223     		movs	r3, #2
 220 0078 0493     		str	r3, [sp, #16]
 169:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 221              		.loc 1 169 3 is_stmt 1 view .LVU55
 169:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 222              		.loc 1 169 35 is_stmt 0 view .LVU56
 223 007a 0023     		movs	r3, #0
 224 007c 0593     		str	r3, [sp, #20]
 170:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 225              		.loc 1 170 3 is_stmt 1 view .LVU57
 170:control-base/typec-board-base/Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 226              		.loc 1 170 36 is_stmt 0 view .LVU58
 227 007e 4FF4A053 		mov	r3, #5120
 228 0082 0693     		str	r3, [sp, #24]
 171:control-base/typec-board-base/Core/Src/main.c **** 
 229              		.loc 1 171 3 is_stmt 1 view .LVU59
 171:control-base/typec-board-base/Core/Src/main.c **** 
 230              		.loc 1 171 36 is_stmt 0 view .LVU60
 231 0084 4FF48053 		mov	r3, #4096
 232 0088 0793     		str	r3, [sp, #28]
 173:control-base/typec-board-base/Core/Src/main.c ****   {
 233              		.loc 1 173 3 is_stmt 1 view .LVU61
 173:control-base/typec-board-base/Core/Src/main.c ****   {
 234              		.loc 1 173 7 is_stmt 0 view .LVU62
 235 008a 0521     		movs	r1, #5
 236 008c 03A8     		add	r0, sp, #12
 237 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 238              	.LVL6:
 173:control-base/typec-board-base/Core/Src/main.c ****   {
 239              		.loc 1 173 6 discriminator 1 view .LVU63
 240 0092 18B9     		cbnz	r0, .L12
 177:control-base/typec-board-base/Core/Src/main.c **** 
 241              		.loc 1 177 1 view .LVU64
 242 0094 14B0     		add	sp, sp, #80
 243              	.LCFI3:
 244              		.cfi_remember_state
 245              		.cfi_def_cfa_offset 8
 246              		@ sp needed
 247 0096 10BD     		pop	{r4, pc}
 248              	.L11:
 249              	.LCFI4:
 250              		.cfi_restore_state
 161:control-base/typec-board-base/Core/Src/main.c ****   }
 251              		.loc 1 161 5 is_stmt 1 view .LVU65
 252 0098 FFF7FEFF 		bl	Error_Handler
 253              	.LVL7:
 254              	.L12:
 175:control-base/typec-board-base/Core/Src/main.c ****   }
 255              		.loc 1 175 5 view .LVU66
 256 009c FFF7FEFF 		bl	Error_Handler
 257              	.LVL8:
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 27


 258              	.L14:
 259              		.align	2
 260              	.L13:
 261 00a0 00380240 		.word	1073887232
 262 00a4 00700040 		.word	1073770496
 263              		.cfi_endproc
 264              	.LFE140:
 266              		.section	.text.main,"ax",%progbits
 267              		.align	1
 268              		.global	main
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	main:
 274              	.LFB139:
  73:control-base/typec-board-base/Core/Src/main.c **** 
 275              		.loc 1 73 1 view -0
 276              		.cfi_startproc
 277              		@ Volatile: function does not return.
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 08B5     		push	{r3, lr}
 281              	.LCFI5:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
  82:control-base/typec-board-base/Core/Src/main.c **** 
 285              		.loc 1 82 3 view .LVU68
 286 0002 FFF7FEFF 		bl	HAL_Init
 287              	.LVL9:
  89:control-base/typec-board-base/Core/Src/main.c **** 
 288              		.loc 1 89 3 view .LVU69
 289 0006 FFF7FEFF 		bl	SystemClock_Config
 290              	.LVL10:
  96:control-base/typec-board-base/Core/Src/main.c ****   MX_DMA_Init();
 291              		.loc 1 96 3 view .LVU70
 292 000a FFF7FEFF 		bl	MX_GPIO_Init
 293              	.LVL11:
  97:control-base/typec-board-base/Core/Src/main.c ****   MX_USART3_UART_Init();
 294              		.loc 1 97 3 view .LVU71
 295 000e FFF7FEFF 		bl	MX_DMA_Init
 296              	.LVL12:
  98:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM1_Init();
 297              		.loc 1 98 3 view .LVU72
 298 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 299              	.LVL13:
  99:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM8_Init();
 300              		.loc 1 99 3 view .LVU73
 301 0016 FFF7FEFF 		bl	MX_TIM1_Init
 302              	.LVL14:
 100:control-base/typec-board-base/Core/Src/main.c ****   MX_SPI1_Init();
 303              		.loc 1 100 3 view .LVU74
 304 001a FFF7FEFF 		bl	MX_TIM8_Init
 305              	.LVL15:
 101:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM10_Init();
 306              		.loc 1 101 3 view .LVU75
 307 001e FFF7FEFF 		bl	MX_SPI1_Init
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 28


 308              	.LVL16:
 102:control-base/typec-board-base/Core/Src/main.c ****   MX_I2C3_Init();
 309              		.loc 1 102 3 view .LVU76
 310 0022 FFF7FEFF 		bl	MX_TIM10_Init
 311              	.LVL17:
 103:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM5_Init();
 312              		.loc 1 103 3 view .LVU77
 313 0026 FFF7FEFF 		bl	MX_I2C3_Init
 314              	.LVL18:
 104:control-base/typec-board-base/Core/Src/main.c ****   MX_CAN1_Init();
 315              		.loc 1 104 3 view .LVU78
 316 002a FFF7FEFF 		bl	MX_TIM5_Init
 317              	.LVL19:
 105:control-base/typec-board-base/Core/Src/main.c ****   MX_CAN2_Init();
 318              		.loc 1 105 3 view .LVU79
 319 002e FFF7FEFF 		bl	MX_CAN1_Init
 320              	.LVL20:
 106:control-base/typec-board-base/Core/Src/main.c ****   MX_USART6_UART_Init();
 321              		.loc 1 106 3 view .LVU80
 322 0032 FFF7FEFF 		bl	MX_CAN2_Init
 323              	.LVL21:
 107:control-base/typec-board-base/Core/Src/main.c ****   MX_USART1_UART_Init();
 324              		.loc 1 107 3 view .LVU81
 325 0036 FFF7FEFF 		bl	MX_USART6_UART_Init
 326              	.LVL22:
 108:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM4_Init();
 327              		.loc 1 108 3 view .LVU82
 328 003a FFF7FEFF 		bl	MX_USART1_UART_Init
 329              	.LVL23:
 109:control-base/typec-board-base/Core/Src/main.c ****   MX_TIM3_Init();
 330              		.loc 1 109 3 view .LVU83
 331 003e FFF7FEFF 		bl	MX_TIM4_Init
 332              	.LVL24:
 110:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 333              		.loc 1 110 3 view .LVU84
 334 0042 FFF7FEFF 		bl	MX_TIM3_Init
 335              	.LVL25:
 112:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END 2 */
 336              		.loc 1 112 3 view .LVU85
 337 0046 FFF7FEFF 		bl	Robot_Init
 338              	.LVL26:
 116:control-base/typec-board-base/Core/Src/main.c **** 
 339              		.loc 1 116 3 view .LVU86
 340 004a FFF7FEFF 		bl	MX_FREERTOS_Init
 341              	.LVL27:
 119:control-base/typec-board-base/Core/Src/main.c **** 
 342              		.loc 1 119 3 view .LVU87
 343 004e FFF7FEFF 		bl	osKernelStart
 344              	.LVL28:
 345              	.L16:
 125:control-base/typec-board-base/Core/Src/main.c ****   {
 346              		.loc 1 125 3 view .LVU88
 130:control-base/typec-board-base/Core/Src/main.c ****   /* USER CODE END 3 */
 347              		.loc 1 130 3 view .LVU89
 125:control-base/typec-board-base/Core/Src/main.c ****   {
 348              		.loc 1 125 9 view .LVU90
 349 0052 FEE7     		b	.L16
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 29


 350              		.cfi_endproc
 351              	.LFE139:
 353              		.text
 354              	.Letext0:
 355              		.file 3 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 356              		.file 4 "/Applications/ArmGNUToolchain/14.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 357              		.file 5 "control-base/typec-board-base/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 358              		.file 6 "control-base/typec-board-base/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 359              		.file 7 "control-base/typec-board-base/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 360              		.file 8 "control-base/typec-board-base/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 361              		.file 9 "control-base/typec-board-base/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 362              		.file 10 "control-base/typec-board-base/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 363              		.file 11 "control-base/typec-board-base/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_o
 364              		.file 12 "control-base/typec-board-base/Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 365              		.file 13 "Minibot/inc/robot.h"
 366              		.file 14 "control-base/typec-board-base/Core/Inc/tim.h"
 367              		.file 15 "control-base/typec-board-base/Core/Inc/usart.h"
 368              		.file 16 "control-base/typec-board-base/Core/Inc/can.h"
 369              		.file 17 "control-base/typec-board-base/Core/Inc/i2c.h"
 370              		.file 18 "control-base/typec-board-base/Core/Inc/spi.h"
 371              		.file 19 "control-base/typec-board-base/Core/Inc/dma.h"
 372              		.file 20 "control-base/typec-board-base/Core/Inc/gpio.h"
 373              		.file 21 "<built-in>"
ARM GAS  /var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:21     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:27     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:61     .text.Error_Handler:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:67     .text.Error_Handler:00000000 Error_Handler
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:105    .text.SystemClock_Config:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:111    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:261    .text.SystemClock_Config:000000a0 $d
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:267    .text.main:00000000 $t
/var/folders/sg/pxk9dyzj7jz_x3889hx3b3dw0000gn/T//cchhfYaF.s:273    .text.main:00000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART3_UART_Init
MX_TIM1_Init
MX_TIM8_Init
MX_SPI1_Init
MX_TIM10_Init
MX_I2C3_Init
MX_TIM5_Init
MX_CAN1_Init
MX_CAN2_Init
MX_USART6_UART_Init
MX_USART1_UART_Init
MX_TIM4_Init
MX_TIM3_Init
Robot_Init
MX_FREERTOS_Init
osKernelStart
